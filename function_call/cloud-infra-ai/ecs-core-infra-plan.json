{
    "format_version": "1.2",
    "terraform_version": "1.7.4",
    "planned_values": {
        "outputs": {
            "cluster_arn": {
                "sensitive": false
            },
            "cluster_autoscaling_capacity_providers": {
                "sensitive": false
            },
            "cluster_capacity_providers": {
                "sensitive": false
            },
            "cluster_id": {
                "sensitive": false
            },
            "cluster_name": {
                "sensitive": false,
                "type": "string",
                "value": "core-infra"
            },
            "private_subnets": {
                "sensitive": false
            },
            "private_subnets_cidr_blocks": {
                "sensitive": false,
                "type": [
                    "list",
                    "string"
                ],
                "value": [
                    "10.0.0.0/20",
                    "10.0.16.0/20",
                    "10.0.32.0/20"
                ]
            },
            "public_subnets": {
                "sensitive": false
            },
            "service_discovery_namespaces": {
                "sensitive": false
            },
            "vpc_id": {
                "sensitive": false
            }
        },
        "root_module": {
            "resources": [
                {
                    "address": "aws_service_discovery_private_dns_namespace.this",
                    "mode": "managed",
                    "type": "aws_service_discovery_private_dns_namespace",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "description": "Service discovery \u003cnamespace\u003e.\u003cclustername\u003e.local",
                        "name": "default.core-infra.local",
                        "tags": {
                            "Blueprint": "core-infra",
                            "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                        },
                        "tags_all": {
                            "Blueprint": "core-infra",
                            "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                        }
                    },
                    "sensitive_values": {
                        "tags": {},
                        "tags_all": {}
                    }
                }
            ],
            "child_modules": [
                {
                    "resources": [
                        {
                            "address": "module.autoscaling.aws_autoscaling_group.idc[0]",
                            "mode": "managed",
                            "type": "aws_autoscaling_group",
                            "name": "idc",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "capacity_rebalance": null,
                                "context": null,
                                "default_instance_warmup": null,
                                "desired_capacity": 3,
                                "desired_capacity_type": null,
                                "enabled_metrics": null,
                                "force_delete": false,
                                "force_delete_warm_pool": false,
                                "health_check_grace_period": 300,
                                "health_check_type": "EC2",
                                "ignore_failed_scaling_activities": false,
                                "initial_lifecycle_hook": [],
                                "instance_maintenance_policy": [],
                                "instance_refresh": [],
                                "launch_configuration": null,
                                "launch_template": [
                                    {}
                                ],
                                "max_instance_lifetime": null,
                                "max_size": 5,
                                "metrics_granularity": "1Minute",
                                "min_elb_capacity": null,
                                "min_size": 3,
                                "name_prefix": "core-infra-",
                                "placement_group": null,
                                "protect_from_scale_in": true,
                                "suspended_processes": null,
                                "tag": [
                                    {
                                        "key": "AmazonECSManaged",
                                        "propagate_at_launch": true,
                                        "value": "true"
                                    },
                                    {
                                        "key": "Blueprint",
                                        "propagate_at_launch": true,
                                        "value": "core-infra"
                                    },
                                    {
                                        "key": "GithubRepo",
                                        "propagate_at_launch": true,
                                        "value": "github.com/aws-ia/ecs-blueprints"
                                    },
                                    {
                                        "key": "Name",
                                        "propagate_at_launch": true,
                                        "value": "core-infra"
                                    }
                                ],
                                "termination_policies": [],
                                "timeouts": {
                                    "delete": null,
                                    "update": null
                                },
                                "wait_for_capacity_timeout": "10m",
                                "wait_for_elb_capacity": null,
                                "warm_pool": []
                            },
                            "sensitive_values": {
                                "availability_zones": [],
                                "initial_lifecycle_hook": [],
                                "instance_maintenance_policy": [],
                                "instance_refresh": [],
                                "launch_template": [
                                    {}
                                ],
                                "load_balancers": [],
                                "mixed_instances_policy": [],
                                "tag": [
                                    {},
                                    {},
                                    {},
                                    {}
                                ],
                                "target_group_arns": [],
                                "termination_policies": [],
                                "timeouts": {},
                                "traffic_source": [],
                                "vpc_zone_identifier": [],
                                "warm_pool": []
                            }
                        },
                        {
                            "address": "module.autoscaling.aws_iam_instance_profile.this[0]",
                            "mode": "managed",
                            "type": "aws_iam_instance_profile",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "name_prefix": "core-infra-",
                                "path": "/",
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                }
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.autoscaling.aws_iam_role.this[0]",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EC2AssumeRole\"}],\"Version\":\"2012-10-17\"}",
                                "description": "ECS role for core-infra",
                                "force_detach_policies": true,
                                "max_session_duration": 3600,
                                "name_prefix": "core-infra-",
                                "path": "/",
                                "permissions_boundary": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                }
                            },
                            "sensitive_values": {
                                "inline_policy": [],
                                "managed_policy_arns": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.autoscaling.aws_iam_role_policy_attachment.this[\"AmazonEC2ContainerServiceforEC2Role\"]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "this",
                            "index": "AmazonEC2ContainerServiceforEC2Role",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.autoscaling.aws_launch_template.this[0]",
                            "mode": "managed",
                            "type": "aws_launch_template",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "block_device_mappings": [],
                                "capacity_reservation_specification": [],
                                "cpu_options": [],
                                "credit_specification": [],
                                "description": null,
                                "disable_api_stop": null,
                                "disable_api_termination": null,
                                "ebs_optimized": null,
                                "elastic_gpu_specifications": [],
                                "elastic_inference_accelerator": [],
                                "enclave_options": [],
                                "hibernation_options": [],
                                "image_id": "ami-03620c38721803dfd",
                                "instance_initiated_shutdown_behavior": null,
                                "instance_market_options": [],
                                "instance_requirements": [],
                                "instance_type": "m5.xlarge",
                                "kernel_id": null,
                                "key_name": null,
                                "license_specification": [],
                                "maintenance_options": [],
                                "monitoring": [
                                    {
                                        "enabled": true
                                    }
                                ],
                                "name_prefix": "core-infra-",
                                "network_interfaces": [],
                                "placement": [],
                                "private_dns_name_options": [],
                                "ram_disk_id": null,
                                "security_group_names": null,
                                "tag_specifications": [],
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                },
                                "update_default_version": null,
                                "user_data": "IyEvYmluL2Jhc2gKY2F0IDw8J0VPRicgPj4gL2V0Yy9lY3MvZWNzLmNvbmZpZwpFQ1NfQ0xVU1RFUj1jb3JlLWluZnJhCkVDU19MT0dMRVZFTD1kZWJ1ZwpFQ1NfRU5BQkxFX1RBU0tfSUFNX1JPTEU9dHJ1ZQpFT0YK"
                            },
                            "sensitive_values": {
                                "block_device_mappings": [],
                                "capacity_reservation_specification": [],
                                "cpu_options": [],
                                "credit_specification": [],
                                "elastic_gpu_specifications": [],
                                "elastic_inference_accelerator": [],
                                "enclave_options": [],
                                "hibernation_options": [],
                                "iam_instance_profile": [],
                                "image_id": true,
                                "instance_market_options": [],
                                "instance_requirements": [],
                                "license_specification": [],
                                "maintenance_options": [],
                                "metadata_options": [],
                                "monitoring": [
                                    {}
                                ],
                                "network_interfaces": [],
                                "placement": [],
                                "private_dns_name_options": [],
                                "tag_specifications": [],
                                "tags": {},
                                "tags_all": {},
                                "vpc_security_group_ids": []
                            }
                        }
                    ],
                    "address": "module.autoscaling"
                },
                {
                    "resources": [
                        {
                            "address": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
                            "mode": "managed",
                            "type": "aws_security_group",
                            "name": "this_name_prefix",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "description": "Autoscaling group security group",
                                "name_prefix": "core-infra-",
                                "revoke_rules_on_delete": false,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra"
                                },
                                "timeouts": {
                                    "create": "10m",
                                    "delete": "15m"
                                }
                            },
                            "sensitive_values": {
                                "egress": [],
                                "ingress": [],
                                "tags": {},
                                "tags_all": {},
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.autoscaling_sg.aws_security_group_rule.egress_rules[0]",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "egress_rules",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "cidr_blocks": [
                                    "0.0.0.0/0"
                                ],
                                "description": "All protocols",
                                "from_port": -1,
                                "ipv6_cidr_blocks": [
                                    "::/0"
                                ],
                                "prefix_list_ids": [],
                                "protocol": "-1",
                                "self": false,
                                "timeouts": null,
                                "to_port": -1,
                                "type": "egress"
                            },
                            "sensitive_values": {
                                "cidr_blocks": [
                                    false
                                ],
                                "ipv6_cidr_blocks": [
                                    false
                                ],
                                "prefix_list_ids": []
                            }
                        },
                        {
                            "address": "module.autoscaling_sg.aws_security_group_rule.ingress_rules[0]",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "ingress_rules",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "cidr_blocks": [
                                    "10.0.0.0/16"
                                ],
                                "description": "HTTP",
                                "from_port": 80,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "tcp",
                                "self": false,
                                "timeouts": null,
                                "to_port": 80,
                                "type": "ingress"
                            },
                            "sensitive_values": {
                                "cidr_blocks": [
                                    false
                                ],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": []
                            }
                        }
                    ],
                    "address": "module.autoscaling_sg"
                },
                {
                    "resources": [
                        {
                            "address": "module.ecs_cluster.aws_cloudwatch_log_group.this[0]",
                            "mode": "managed",
                            "type": "aws_cloudwatch_log_group",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "kms_key_id": null,
                                "name": "/aws/ecs/core-infra",
                                "retention_in_days": 90,
                                "skip_destroy": false,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                }
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.ecs_cluster.aws_ecs_capacity_provider.this[\"core-infra\"]",
                            "mode": "managed",
                            "type": "aws_ecs_capacity_provider",
                            "name": "this",
                            "index": "core-infra",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "auto_scaling_group_provider": [
                                    {
                                        "managed_scaling": [
                                            {
                                                "maximum_scaling_step_size": 5,
                                                "minimum_scaling_step_size": 1,
                                                "status": "ENABLED",
                                                "target_capacity": 60
                                            }
                                        ],
                                        "managed_termination_protection": "ENABLED"
                                    }
                                ],
                                "name": "core-infra",
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                }
                            },
                            "sensitive_values": {
                                "auto_scaling_group_provider": [
                                    {
                                        "managed_scaling": [
                                            {}
                                        ]
                                    }
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.ecs_cluster.aws_ecs_cluster.this[0]",
                            "mode": "managed",
                            "type": "aws_ecs_cluster",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "configuration": [
                                    {
                                        "execute_command_configuration": [
                                            {
                                                "kms_key_id": null,
                                                "log_configuration": [],
                                                "logging": "DEFAULT"
                                            }
                                        ]
                                    }
                                ],
                                "name": "core-infra",
                                "service_connect_defaults": [
                                    {}
                                ],
                                "setting": [
                                    {
                                        "name": "containerInsights",
                                        "value": "enabled"
                                    }
                                ],
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                                }
                            },
                            "sensitive_values": {
                                "configuration": [
                                    {
                                        "execute_command_configuration": [
                                            {
                                                "log_configuration": []
                                            }
                                        ]
                                    }
                                ],
                                "service_connect_defaults": [
                                    {}
                                ],
                                "setting": [
                                    {}
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.ecs_cluster.aws_ecs_cluster_capacity_providers.this[0]",
                            "mode": "managed",
                            "type": "aws_ecs_cluster_capacity_providers",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "capacity_providers": [
                                    "core-infra"
                                ],
                                "cluster_name": "core-infra",
                                "default_capacity_provider_strategy": [
                                    {
                                        "base": 1,
                                        "capacity_provider": "core-infra",
                                        "weight": 1
                                    }
                                ]
                            },
                            "sensitive_values": {
                                "capacity_providers": [
                                    false
                                ],
                                "default_capacity_provider_strategy": [
                                    {}
                                ]
                            }
                        }
                    ],
                    "address": "module.ecs_cluster"
                },
                {
                    "resources": [
                        {
                            "address": "module.vpc.aws_default_network_acl.this[0]",
                            "mode": "managed",
                            "type": "aws_default_network_acl",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "egress": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "",
                                        "from_port": 0,
                                        "icmp_code": null,
                                        "icmp_type": null,
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": 101,
                                        "to_port": 0
                                    },
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": 0,
                                        "icmp_code": null,
                                        "icmp_type": null,
                                        "ipv6_cidr_block": "",
                                        "protocol": "-1",
                                        "rule_no": 100,
                                        "to_port": 0
                                    }
                                ],
                                "ingress": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "",
                                        "from_port": 0,
                                        "icmp_code": null,
                                        "icmp_type": null,
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": 101,
                                        "to_port": 0
                                    },
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": 0,
                                        "icmp_code": null,
                                        "icmp_type": null,
                                        "ipv6_cidr_block": "",
                                        "protocol": "-1",
                                        "rule_no": 100,
                                        "to_port": 0
                                    }
                                ],
                                "subnet_ids": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-default"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-default"
                                }
                            },
                            "sensitive_values": {
                                "egress": [
                                    {},
                                    {}
                                ],
                                "ingress": [
                                    {},
                                    {}
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_default_route_table.default[0]",
                            "mode": "managed",
                            "type": "aws_default_route_table",
                            "name": "default",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "propagating_vgws": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-default"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-default"
                                },
                                "timeouts": {
                                    "create": "5m",
                                    "update": "5m"
                                }
                            },
                            "sensitive_values": {
                                "route": [],
                                "tags": {},
                                "tags_all": {},
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_default_security_group.this[0]",
                            "mode": "managed",
                            "type": "aws_default_security_group",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "revoke_rules_on_delete": false,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-default"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-default"
                                }
                            },
                            "sensitive_values": {
                                "egress": [],
                                "ingress": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_eip.nat[0]",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "address": null,
                                "associate_with_private_ip": null,
                                "customer_owned_ipv4_pool": null,
                                "domain": "vpc",
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-us-west-2a"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-us-west-2a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_internet_gateway.this[0]",
                            "mode": "managed",
                            "type": "aws_internet_gateway",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_nat_gateway.this[0]",
                            "mode": "managed",
                            "type": "aws_nat_gateway",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "connectivity_type": "public",
                                "secondary_allocation_ids": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-us-west-2a"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-us-west-2a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "secondary_private_ip_addresses": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route.private_nat_gateway[0]",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "private_nat_gateway",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "carrier_gateway_id": null,
                                "core_network_arn": null,
                                "destination_cidr_block": "0.0.0.0/0",
                                "destination_ipv6_cidr_block": null,
                                "destination_prefix_list_id": null,
                                "egress_only_gateway_id": null,
                                "gateway_id": null,
                                "local_gateway_id": null,
                                "timeouts": {
                                    "create": "5m",
                                    "delete": null,
                                    "update": null
                                },
                                "transit_gateway_id": null,
                                "vpc_endpoint_id": null,
                                "vpc_peering_connection_id": null
                            },
                            "sensitive_values": {
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route.public_internet_gateway[0]",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "public_internet_gateway",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "carrier_gateway_id": null,
                                "core_network_arn": null,
                                "destination_cidr_block": "0.0.0.0/0",
                                "destination_ipv6_cidr_block": null,
                                "destination_prefix_list_id": null,
                                "egress_only_gateway_id": null,
                                "local_gateway_id": null,
                                "nat_gateway_id": null,
                                "timeouts": {
                                    "create": "5m",
                                    "delete": null,
                                    "update": null
                                },
                                "transit_gateway_id": null,
                                "vpc_endpoint_id": null,
                                "vpc_peering_connection_id": null
                            },
                            "sensitive_values": {
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.private[0]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.public[0]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[0]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[1]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[2]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[0]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[1]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[2]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[0]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-west-2a",
                                "cidr_block": "10.0.0.0/20",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private-us-west-2a"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private-us-west-2a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[1]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-west-2b",
                                "cidr_block": "10.0.16.0/20",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private-us-west-2b"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private-us-west-2b"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[2]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-west-2c",
                                "cidr_block": "10.0.32.0/20",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private-us-west-2c"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-private-us-west-2c"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[0]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-west-2a",
                                "cidr_block": "10.0.48.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public-us-west-2a"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public-us-west-2a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[1]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-west-2b",
                                "cidr_block": "10.0.49.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public-us-west-2b"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public-us-west-2b"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[2]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-west-2c",
                                "cidr_block": "10.0.50.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public-us-west-2c"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra-public-us-west-2c"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_vpc.this[0]",
                            "mode": "managed",
                            "type": "aws_vpc",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_generated_ipv6_cidr_block": null,
                                "cidr_block": "10.0.0.0/16",
                                "enable_dns_hostnames": true,
                                "enable_dns_support": true,
                                "instance_tenancy": "default",
                                "ipv4_ipam_pool_id": null,
                                "ipv4_netmask_length": null,
                                "ipv6_ipam_pool_id": null,
                                "ipv6_netmask_length": null,
                                "tags": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra"
                                },
                                "tags_all": {
                                    "Blueprint": "core-infra",
                                    "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                                    "Name": "core-infra"
                                }
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.vpc"
                }
            ]
        }
    },
    "resource_changes": [
        {
            "address": "aws_service_discovery_private_dns_namespace.this",
            "mode": "managed",
            "type": "aws_service_discovery_private_dns_namespace",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Service discovery \u003cnamespace\u003e.\u003cclustername\u003e.local",
                    "name": "default.core-infra.local",
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "hosted_zone": true,
                    "id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "module_address": "module.autoscaling",
            "mode": "managed",
            "type": "aws_autoscaling_group",
            "name": "idc",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "capacity_rebalance": null,
                    "context": null,
                    "default_instance_warmup": null,
                    "desired_capacity": 3,
                    "desired_capacity_type": null,
                    "enabled_metrics": null,
                    "force_delete": false,
                    "force_delete_warm_pool": false,
                    "health_check_grace_period": 300,
                    "health_check_type": "EC2",
                    "ignore_failed_scaling_activities": false,
                    "initial_lifecycle_hook": [],
                    "instance_maintenance_policy": [],
                    "instance_refresh": [],
                    "launch_configuration": null,
                    "launch_template": [
                        {}
                    ],
                    "max_instance_lifetime": null,
                    "max_size": 5,
                    "metrics_granularity": "1Minute",
                    "min_elb_capacity": null,
                    "min_size": 3,
                    "name_prefix": "core-infra-",
                    "placement_group": null,
                    "protect_from_scale_in": true,
                    "suspended_processes": null,
                    "tag": [
                        {
                            "key": "AmazonECSManaged",
                            "propagate_at_launch": true,
                            "value": "true"
                        },
                        {
                            "key": "Blueprint",
                            "propagate_at_launch": true,
                            "value": "core-infra"
                        },
                        {
                            "key": "GithubRepo",
                            "propagate_at_launch": true,
                            "value": "github.com/aws-ia/ecs-blueprints"
                        },
                        {
                            "key": "Name",
                            "propagate_at_launch": true,
                            "value": "core-infra"
                        }
                    ],
                    "termination_policies": [],
                    "timeouts": {
                        "delete": null,
                        "update": null
                    },
                    "wait_for_capacity_timeout": "10m",
                    "wait_for_elb_capacity": null,
                    "warm_pool": []
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zones": true,
                    "default_cooldown": true,
                    "id": true,
                    "initial_lifecycle_hook": [],
                    "instance_maintenance_policy": [],
                    "instance_refresh": [],
                    "launch_template": [
                        {
                            "id": true,
                            "name": true,
                            "version": true
                        }
                    ],
                    "load_balancers": true,
                    "mixed_instances_policy": true,
                    "name": true,
                    "predicted_capacity": true,
                    "service_linked_role_arn": true,
                    "tag": [
                        {},
                        {},
                        {},
                        {}
                    ],
                    "target_group_arns": true,
                    "termination_policies": [],
                    "timeouts": {},
                    "traffic_source": true,
                    "vpc_zone_identifier": true,
                    "warm_pool": [],
                    "warm_pool_size": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "availability_zones": [],
                    "initial_lifecycle_hook": [],
                    "instance_maintenance_policy": [],
                    "instance_refresh": [],
                    "launch_template": [
                        {}
                    ],
                    "load_balancers": [],
                    "mixed_instances_policy": [],
                    "tag": [
                        {},
                        {},
                        {},
                        {}
                    ],
                    "target_group_arns": [],
                    "termination_policies": [],
                    "timeouts": {},
                    "traffic_source": [],
                    "vpc_zone_identifier": [],
                    "warm_pool": []
                }
            }
        },
        {
            "address": "module.autoscaling.aws_iam_instance_profile.this[0]",
            "module_address": "module.autoscaling",
            "mode": "managed",
            "type": "aws_iam_instance_profile",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "name_prefix": "core-infra-",
                    "path": "/",
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "create_date": true,
                    "id": true,
                    "name": true,
                    "role": true,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.autoscaling.aws_iam_role.this[0]",
            "module_address": "module.autoscaling",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EC2AssumeRole\"}],\"Version\":\"2012-10-17\"}",
                    "description": "ECS role for core-infra",
                    "force_detach_policies": true,
                    "max_session_duration": 3600,
                    "name_prefix": "core-infra-",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "create_date": true,
                    "id": true,
                    "inline_policy": true,
                    "managed_policy_arns": true,
                    "name": true,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.autoscaling.aws_iam_role_policy_attachment.this[\"AmazonEC2ContainerServiceforEC2Role\"]",
            "module_address": "module.autoscaling",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "this",
            "index": "AmazonEC2ContainerServiceforEC2Role",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
                },
                "after_unknown": {
                    "id": true,
                    "role": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.autoscaling.aws_launch_template.this[0]",
            "module_address": "module.autoscaling",
            "mode": "managed",
            "type": "aws_launch_template",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "block_device_mappings": [],
                    "capacity_reservation_specification": [],
                    "cpu_options": [],
                    "credit_specification": [],
                    "description": null,
                    "disable_api_stop": null,
                    "disable_api_termination": null,
                    "ebs_optimized": null,
                    "elastic_gpu_specifications": [],
                    "elastic_inference_accelerator": [],
                    "enclave_options": [],
                    "hibernation_options": [],
                    "image_id": "ami-03620c38721803dfd",
                    "instance_initiated_shutdown_behavior": null,
                    "instance_market_options": [],
                    "instance_requirements": [],
                    "instance_type": "m5.xlarge",
                    "kernel_id": null,
                    "key_name": null,
                    "license_specification": [],
                    "maintenance_options": [],
                    "monitoring": [
                        {
                            "enabled": true
                        }
                    ],
                    "name_prefix": "core-infra-",
                    "network_interfaces": [],
                    "placement": [],
                    "private_dns_name_options": [],
                    "ram_disk_id": null,
                    "security_group_names": null,
                    "tag_specifications": [],
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "update_default_version": null,
                    "user_data": "IyEvYmluL2Jhc2gKY2F0IDw8J0VPRicgPj4gL2V0Yy9lY3MvZWNzLmNvbmZpZwpFQ1NfQ0xVU1RFUj1jb3JlLWluZnJhCkVDU19MT0dMRVZFTD1kZWJ1ZwpFQ1NfRU5BQkxFX1RBU0tfSUFNX1JPTEU9dHJ1ZQpFT0YK"
                },
                "after_unknown": {
                    "arn": true,
                    "block_device_mappings": [],
                    "capacity_reservation_specification": [],
                    "cpu_options": [],
                    "credit_specification": [],
                    "default_version": true,
                    "elastic_gpu_specifications": [],
                    "elastic_inference_accelerator": [],
                    "enclave_options": [],
                    "hibernation_options": [],
                    "iam_instance_profile": true,
                    "id": true,
                    "instance_market_options": [],
                    "instance_requirements": [],
                    "latest_version": true,
                    "license_specification": [],
                    "maintenance_options": [],
                    "metadata_options": true,
                    "monitoring": [
                        {}
                    ],
                    "name": true,
                    "network_interfaces": [],
                    "placement": [],
                    "private_dns_name_options": [],
                    "tag_specifications": [],
                    "tags": {},
                    "tags_all": {},
                    "vpc_security_group_ids": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "block_device_mappings": [],
                    "capacity_reservation_specification": [],
                    "cpu_options": [],
                    "credit_specification": [],
                    "elastic_gpu_specifications": [],
                    "elastic_inference_accelerator": [],
                    "enclave_options": [],
                    "hibernation_options": [],
                    "iam_instance_profile": [],
                    "image_id": true,
                    "instance_market_options": [],
                    "instance_requirements": [],
                    "license_specification": [],
                    "maintenance_options": [],
                    "metadata_options": [],
                    "monitoring": [
                        {}
                    ],
                    "network_interfaces": [],
                    "placement": [],
                    "private_dns_name_options": [],
                    "tag_specifications": [],
                    "tags": {},
                    "tags_all": {},
                    "vpc_security_group_ids": []
                }
            }
        },
        {
            "address": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
            "module_address": "module.autoscaling_sg",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "this_name_prefix",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Autoscaling group security group",
                    "name_prefix": "core-infra-",
                    "revoke_rules_on_delete": false,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra"
                    },
                    "timeouts": {
                        "create": "10m",
                        "delete": "15m"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "egress": true,
                    "id": true,
                    "ingress": true,
                    "name": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.autoscaling_sg.aws_security_group_rule.egress_rules[0]",
            "module_address": "module.autoscaling_sg",
            "mode": "managed",
            "type": "aws_security_group_rule",
            "name": "egress_rules",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "cidr_blocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "All protocols",
                    "from_port": -1,
                    "ipv6_cidr_blocks": [
                        "::/0"
                    ],
                    "prefix_list_ids": [],
                    "protocol": "-1",
                    "self": false,
                    "timeouts": null,
                    "to_port": -1,
                    "type": "egress"
                },
                "after_unknown": {
                    "cidr_blocks": [
                        false
                    ],
                    "id": true,
                    "ipv6_cidr_blocks": [
                        false
                    ],
                    "prefix_list_ids": [],
                    "security_group_id": true,
                    "security_group_rule_id": true,
                    "source_security_group_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "cidr_blocks": [
                        false
                    ],
                    "ipv6_cidr_blocks": [
                        false
                    ],
                    "prefix_list_ids": []
                }
            }
        },
        {
            "address": "module.autoscaling_sg.aws_security_group_rule.ingress_rules[0]",
            "module_address": "module.autoscaling_sg",
            "mode": "managed",
            "type": "aws_security_group_rule",
            "name": "ingress_rules",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "cidr_blocks": [
                        "10.0.0.0/16"
                    ],
                    "description": "HTTP",
                    "from_port": 80,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "self": false,
                    "timeouts": null,
                    "to_port": 80,
                    "type": "ingress"
                },
                "after_unknown": {
                    "cidr_blocks": [
                        false
                    ],
                    "id": true,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_group_id": true,
                    "security_group_rule_id": true,
                    "source_security_group_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "cidr_blocks": [
                        false
                    ],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": []
                }
            }
        },
        {
            "address": "module.ecs_cluster.aws_cloudwatch_log_group.this[0]",
            "module_address": "module.ecs_cluster",
            "mode": "managed",
            "type": "aws_cloudwatch_log_group",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "kms_key_id": null,
                    "name": "/aws/ecs/core-infra",
                    "retention_in_days": 90,
                    "skip_destroy": false,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "log_group_class": true,
                    "name_prefix": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.ecs_cluster.aws_ecs_capacity_provider.this[\"core-infra\"]",
            "module_address": "module.ecs_cluster",
            "mode": "managed",
            "type": "aws_ecs_capacity_provider",
            "name": "this",
            "index": "core-infra",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "auto_scaling_group_provider": [
                        {
                            "managed_scaling": [
                                {
                                    "maximum_scaling_step_size": 5,
                                    "minimum_scaling_step_size": 1,
                                    "status": "ENABLED",
                                    "target_capacity": 60
                                }
                            ],
                            "managed_termination_protection": "ENABLED"
                        }
                    ],
                    "name": "core-infra",
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "auto_scaling_group_provider": [
                        {
                            "auto_scaling_group_arn": true,
                            "managed_draining": true,
                            "managed_scaling": [
                                {
                                    "instance_warmup_period": true
                                }
                            ]
                        }
                    ],
                    "id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "auto_scaling_group_provider": [
                        {
                            "managed_scaling": [
                                {}
                            ]
                        }
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.ecs_cluster.aws_ecs_cluster.this[0]",
            "module_address": "module.ecs_cluster",
            "mode": "managed",
            "type": "aws_ecs_cluster",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "configuration": [
                        {
                            "execute_command_configuration": [
                                {
                                    "kms_key_id": null,
                                    "log_configuration": [],
                                    "logging": "DEFAULT"
                                }
                            ]
                        }
                    ],
                    "name": "core-infra",
                    "service_connect_defaults": [
                        {}
                    ],
                    "setting": [
                        {
                            "name": "containerInsights",
                            "value": "enabled"
                        }
                    ],
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "configuration": [
                        {
                            "execute_command_configuration": [
                                {
                                    "log_configuration": []
                                }
                            ]
                        }
                    ],
                    "id": true,
                    "service_connect_defaults": [
                        {
                            "namespace": true
                        }
                    ],
                    "setting": [
                        {}
                    ],
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "configuration": [
                        {
                            "execute_command_configuration": [
                                {
                                    "log_configuration": []
                                }
                            ]
                        }
                    ],
                    "service_connect_defaults": [
                        {}
                    ],
                    "setting": [
                        {}
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.ecs_cluster.aws_ecs_cluster_capacity_providers.this[0]",
            "module_address": "module.ecs_cluster",
            "mode": "managed",
            "type": "aws_ecs_cluster_capacity_providers",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "capacity_providers": [
                        "core-infra"
                    ],
                    "cluster_name": "core-infra",
                    "default_capacity_provider_strategy": [
                        {
                            "base": 1,
                            "capacity_provider": "core-infra",
                            "weight": 1
                        }
                    ]
                },
                "after_unknown": {
                    "capacity_providers": [
                        false
                    ],
                    "default_capacity_provider_strategy": [
                        {}
                    ],
                    "id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "capacity_providers": [
                        false
                    ],
                    "default_capacity_provider_strategy": [
                        {}
                    ]
                }
            }
        },
        {
            "address": "module.vpc.aws_default_network_acl.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_default_network_acl",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "egress": [
                        {
                            "action": "allow",
                            "cidr_block": "",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "::/0",
                            "protocol": "-1",
                            "rule_no": 101,
                            "to_port": 0
                        },
                        {
                            "action": "allow",
                            "cidr_block": "0.0.0.0/0",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "",
                            "protocol": "-1",
                            "rule_no": 100,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "action": "allow",
                            "cidr_block": "",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "::/0",
                            "protocol": "-1",
                            "rule_no": 101,
                            "to_port": 0
                        },
                        {
                            "action": "allow",
                            "cidr_block": "0.0.0.0/0",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "",
                            "protocol": "-1",
                            "rule_no": 100,
                            "to_port": 0
                        }
                    ],
                    "subnet_ids": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-default"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-default"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "egress": [
                        {},
                        {}
                    ],
                    "id": true,
                    "ingress": [
                        {},
                        {}
                    ],
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {},
                        {}
                    ],
                    "ingress": [
                        {},
                        {}
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_default_route_table.default[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_default_route_table",
            "name": "default",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "propagating_vgws": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-default"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-default"
                    },
                    "timeouts": {
                        "create": "5m",
                        "update": "5m"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_route_table_id": true,
                    "id": true,
                    "owner_id": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "route": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_default_security_group.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_default_security_group",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "revoke_rules_on_delete": false,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-default"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-default"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "description": true,
                    "egress": true,
                    "id": true,
                    "ingress": true,
                    "name": true,
                    "name_prefix": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_eip.nat[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-us-west-2a"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-us-west-2a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_internet_gateway.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_internet_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_nat_gateway.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_nat_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-us-west-2a"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-us-west-2a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": true,
                    "subnet_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.private_nat_gateway[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "private_nat_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.public_internet_gateway[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "public_internet_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "local_gateway_id": null,
                    "nat_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "gateway_id": true,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-west-2a",
                    "cidr_block": "10.0.0.0/20",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private-us-west-2a"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private-us-west-2a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-west-2b",
                    "cidr_block": "10.0.16.0/20",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private-us-west-2b"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private-us-west-2b"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-west-2c",
                    "cidr_block": "10.0.32.0/20",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private-us-west-2c"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-private-us-west-2c"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-west-2a",
                    "cidr_block": "10.0.48.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public-us-west-2a"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public-us-west-2a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-west-2b",
                    "cidr_block": "10.0.49.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public-us-west-2b"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public-us-west-2b"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-west-2c",
                    "cidr_block": "10.0.50.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public-us-west-2c"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra-public-us-west-2c"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_vpc.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_vpc",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_generated_ipv6_cidr_block": null,
                    "cidr_block": "10.0.0.0/16",
                    "enable_dns_hostnames": true,
                    "enable_dns_support": true,
                    "instance_tenancy": "default",
                    "ipv4_ipam_pool_id": null,
                    "ipv4_netmask_length": null,
                    "ipv6_ipam_pool_id": null,
                    "ipv6_netmask_length": null,
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints",
                        "Name": "core-infra"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "default_route_table_id": true,
                    "default_security_group_id": true,
                    "dhcp_options_id": true,
                    "enable_network_address_usage_metrics": true,
                    "id": true,
                    "ipv6_association_id": true,
                    "ipv6_cidr_block": true,
                    "ipv6_cidr_block_network_border_group": true,
                    "main_route_table_id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        }
    ],
    "output_changes": {
        "cluster_arn": {
            "actions": [
                "create"
            ],
            "before": null,
            "after_unknown": true,
            "before_sensitive": false,
            "after_sensitive": false
        },
        "cluster_autoscaling_capacity_providers": {
            "actions": [
                "create"
            ],
            "before": null,
            "after": {
                "core-infra": {
                    "auto_scaling_group_provider": [
                        {
                            "managed_scaling": [
                                {
                                    "maximum_scaling_step_size": 5,
                                    "minimum_scaling_step_size": 1,
                                    "status": "ENABLED",
                                    "target_capacity": 60
                                }
                            ],
                            "managed_termination_protection": "ENABLED"
                        }
                    ],
                    "name": "core-infra",
                    "tags": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    },
                    "tags_all": {
                        "Blueprint": "core-infra",
                        "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                    }
                }
            },
            "after_unknown": {
                "core-infra": {
                    "arn": true,
                    "auto_scaling_group_provider": [
                        {
                            "auto_scaling_group_arn": true,
                            "managed_draining": true,
                            "managed_scaling": [
                                {
                                    "instance_warmup_period": true
                                }
                            ]
                        }
                    ],
                    "id": true,
                    "tags": {},
                    "tags_all": {}
                }
            },
            "before_sensitive": false,
            "after_sensitive": false
        },
        "cluster_capacity_providers": {
            "actions": [
                "create"
            ],
            "before": null,
            "after_unknown": true,
            "before_sensitive": false,
            "after_sensitive": false
        },
        "cluster_id": {
            "actions": [
                "create"
            ],
            "before": null,
            "after_unknown": true,
            "before_sensitive": false,
            "after_sensitive": false
        },
        "cluster_name": {
            "actions": [
                "create"
            ],
            "before": null,
            "after": "core-infra",
            "after_unknown": false,
            "before_sensitive": false,
            "after_sensitive": false
        },
        "private_subnets": {
            "actions": [
                "create"
            ],
            "before": null,
            "after": [
                null,
                null,
                null
            ],
            "after_unknown": [
                true,
                true,
                true
            ],
            "before_sensitive": false,
            "after_sensitive": false
        },
        "private_subnets_cidr_blocks": {
            "actions": [
                "create"
            ],
            "before": null,
            "after": [
                "10.0.0.0/20",
                "10.0.16.0/20",
                "10.0.32.0/20"
            ],
            "after_unknown": false,
            "before_sensitive": false,
            "after_sensitive": false
        },
        "public_subnets": {
            "actions": [
                "create"
            ],
            "before": null,
            "after": [
                null,
                null,
                null
            ],
            "after_unknown": [
                true,
                true,
                true
            ],
            "before_sensitive": false,
            "after_sensitive": false
        },
        "service_discovery_namespaces": {
            "actions": [
                "create"
            ],
            "before": null,
            "after": {
                "description": "Service discovery \u003cnamespace\u003e.\u003cclustername\u003e.local",
                "name": "default.core-infra.local",
                "tags": {
                    "Blueprint": "core-infra",
                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                },
                "tags_all": {
                    "Blueprint": "core-infra",
                    "GithubRepo": "github.com/aws-ia/ecs-blueprints"
                }
            },
            "after_unknown": {
                "arn": true,
                "hosted_zone": true,
                "id": true,
                "tags": {},
                "tags_all": {},
                "vpc": true
            },
            "before_sensitive": false,
            "after_sensitive": false
        },
        "vpc_id": {
            "actions": [
                "create"
            ],
            "before": null,
            "after_unknown": true,
            "before_sensitive": false,
            "after_sensitive": false
        }
    },
    "prior_state": {
        "format_version": "1.0",
        "terraform_version": "1.7.4",
        "values": {
            "outputs": {
                "cluster_name": {
                    "sensitive": false,
                    "value": "core-infra",
                    "type": "string"
                },
                "private_subnets_cidr_blocks": {
                    "sensitive": false,
                    "value": [
                        "10.0.0.0/20",
                        "10.0.16.0/20",
                        "10.0.32.0/20"
                    ],
                    "type": [
                        "list",
                        "string"
                    ]
                }
            },
            "root_module": {
                "resources": [
                    {
                        "address": "data.aws_availability_zones.available",
                        "mode": "data",
                        "type": "aws_availability_zones",
                        "name": "available",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "all_availability_zones": null,
                            "exclude_names": null,
                            "exclude_zone_ids": null,
                            "filter": null,
                            "group_names": [
                                "us-west-2"
                            ],
                            "id": "us-west-2",
                            "names": [
                                "us-west-2a",
                                "us-west-2b",
                                "us-west-2c",
                                "us-west-2d"
                            ],
                            "state": null,
                            "timeouts": null,
                            "zone_ids": [
                                "usw2-az2",
                                "usw2-az1",
                                "usw2-az3",
                                "usw2-az4"
                            ]
                        },
                        "sensitive_values": {
                            "group_names": [
                                false
                            ],
                            "names": [
                                false,
                                false,
                                false,
                                false
                            ],
                            "zone_ids": [
                                false,
                                false,
                                false,
                                false
                            ]
                        }
                    },
                    {
                        "address": "data.aws_ssm_parameter.ecs_optimized_ami",
                        "mode": "data",
                        "type": "aws_ssm_parameter",
                        "name": "ecs_optimized_ami",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "arn": "arn:aws:ssm:us-west-2::parameter/aws/service/ecs/optimized-ami/amazon-linux-2/recommended",
                            "id": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended",
                            "insecure_value": "{\"ecs_agent_version\":\"1.82.3\",\"ecs_runtime_version\":\"Docker version 20.10.25\",\"image_id\":\"ami-03620c38721803dfd\",\"image_name\":\"amzn2-ami-ecs-hvm-2.0.20240424-x86_64-ebs\",\"image_version\":\"2.0.20240424\",\"os\":\"Amazon Linux 2\",\"schema_version\":1,\"source_image_name\":\"amzn2-ami-minimal-hvm-2.0.20240412.0-x86_64-ebs\"}",
                            "name": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended",
                            "type": "String",
                            "value": "{\"ecs_agent_version\":\"1.82.3\",\"ecs_runtime_version\":\"Docker version 20.10.25\",\"image_id\":\"ami-03620c38721803dfd\",\"image_name\":\"amzn2-ami-ecs-hvm-2.0.20240424-x86_64-ebs\",\"image_version\":\"2.0.20240424\",\"os\":\"Amazon Linux 2\",\"schema_version\":1,\"source_image_name\":\"amzn2-ami-minimal-hvm-2.0.20240412.0-x86_64-ebs\"}",
                            "version": 142,
                            "with_decryption": true
                        },
                        "sensitive_values": {
                            "value": true
                        }
                    }
                ],
                "child_modules": [
                    {
                        "resources": [
                            {
                                "address": "module.autoscaling.data.aws_iam_policy_document.assume_role_policy[0]",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role_policy",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "1256122602",
                                    "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EC2AssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                    "override_policy_documents": null,
                                    "policy_id": null,
                                    "source_policy_documents": null,
                                    "statement": [
                                        {
                                            "actions": [
                                                "sts:AssumeRole"
                                            ],
                                            "condition": [],
                                            "effect": "Allow",
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        "ec2.amazonaws.com"
                                                    ],
                                                    "type": "Service"
                                                }
                                            ],
                                            "resources": [],
                                            "sid": "EC2AssumeRole"
                                        }
                                    ],
                                    "version": "2012-10-17"
                                },
                                "sensitive_values": {
                                    "statement": [
                                        {
                                            "actions": [
                                                false
                                            ],
                                            "condition": [],
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "resources": []
                                        }
                                    ]
                                }
                            },
                            {
                                "address": "module.autoscaling.data.aws_partition.current",
                                "mode": "data",
                                "type": "aws_partition",
                                "name": "current",
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "dns_suffix": "amazonaws.com",
                                    "id": "aws",
                                    "partition": "aws",
                                    "reverse_dns_prefix": "com.amazonaws"
                                },
                                "sensitive_values": {}
                            }
                        ],
                        "address": "module.autoscaling"
                    }
                ]
            }
        }
    },
    "configuration": {
        "provider_config": {
            "aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "version_constraint": "\u003e= 5.0.0",
                "expressions": {
                    "region": {
                        "references": [
                            "local.region"
                        ]
                    }
                }
            }
        },
        "root_module": {
            "outputs": {
                "cluster_arn": {
                    "expression": {
                        "references": [
                            "module.ecs_cluster.arn",
                            "module.ecs_cluster"
                        ]
                    },
                    "description": "ARN that identifies the cluster"
                },
                "cluster_autoscaling_capacity_providers": {
                    "expression": {
                        "references": [
                            "module.ecs_cluster.autoscaling_capacity_providers",
                            "module.ecs_cluster"
                        ]
                    },
                    "description": "Map of capacity providers created and their attributes"
                },
                "cluster_capacity_providers": {
                    "expression": {
                        "references": [
                            "module.ecs_cluster.cluster_capacity_providers",
                            "module.ecs_cluster"
                        ]
                    },
                    "description": "Map of cluster capacity providers attributes"
                },
                "cluster_id": {
                    "expression": {
                        "references": [
                            "module.ecs_cluster.id",
                            "module.ecs_cluster"
                        ]
                    },
                    "description": "ID that identifies the cluster"
                },
                "cluster_name": {
                    "expression": {
                        "references": [
                            "module.ecs_cluster.name",
                            "module.ecs_cluster"
                        ]
                    },
                    "description": "Name that identifies the cluster"
                },
                "private_subnets": {
                    "expression": {
                        "references": [
                            "module.vpc.private_subnets",
                            "module.vpc"
                        ]
                    },
                    "description": "A list of private subnets for the client app"
                },
                "private_subnets_cidr_blocks": {
                    "expression": {
                        "references": [
                            "module.vpc.private_subnets_cidr_blocks",
                            "module.vpc"
                        ]
                    },
                    "description": "A list of private subnets CIDRs"
                },
                "public_subnets": {
                    "expression": {
                        "references": [
                            "module.vpc.public_subnets",
                            "module.vpc"
                        ]
                    },
                    "description": "A list of public subnets"
                },
                "service_discovery_namespaces": {
                    "expression": {
                        "references": [
                            "aws_service_discovery_private_dns_namespace.this"
                        ]
                    },
                    "description": "Service discovery namespaces already available"
                },
                "vpc_id": {
                    "expression": {
                        "references": [
                            "module.vpc.vpc_id",
                            "module.vpc"
                        ]
                    },
                    "description": "The ID of the VPC"
                }
            },
            "resources": [
                {
                    "address": "aws_service_discovery_private_dns_namespace.this",
                    "mode": "managed",
                    "type": "aws_service_discovery_private_dns_namespace",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "description": {
                            "constant_value": "Service discovery \u003cnamespace\u003e.\u003cclustername\u003e.local"
                        },
                        "name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        },
                        "vpc": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "data.aws_availability_zones.available",
                    "mode": "data",
                    "type": "aws_availability_zones",
                    "name": "available",
                    "provider_config_key": "aws",
                    "schema_version": 0
                },
                {
                    "address": "data.aws_ssm_parameter.ecs_optimized_ami",
                    "mode": "data",
                    "type": "aws_ssm_parameter",
                    "name": "ecs_optimized_ami",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "constant_value": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended"
                        }
                    },
                    "schema_version": 0
                }
            ],
            "module_calls": {
                "autoscaling": {
                    "source": "terraform-aws-modules/autoscaling/aws",
                    "expressions": {
                        "autoscaling_group_tags": {
                            "constant_value": {
                                "AmazonECSManaged": true
                            }
                        },
                        "create_iam_instance_profile": {
                            "constant_value": true
                        },
                        "desired_capacity": {
                            "constant_value": 3
                        },
                        "health_check_type": {
                            "constant_value": "EC2"
                        },
                        "iam_role_description": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "iam_role_name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "iam_role_policies": {
                            "constant_value": {
                                "AmazonEC2ContainerServiceforEC2Role": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
                            }
                        },
                        "ignore_desired_capacity_changes": {
                            "constant_value": true
                        },
                        "image_id": {
                            "references": [
                                "data.aws_ssm_parameter.ecs_optimized_ami.value",
                                "data.aws_ssm_parameter.ecs_optimized_ami"
                            ]
                        },
                        "instance_type": {
                            "constant_value": "m5.xlarge"
                        },
                        "max_size": {
                            "constant_value": 5
                        },
                        "min_size": {
                            "constant_value": 3
                        },
                        "name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "protect_from_scale_in": {
                            "constant_value": true
                        },
                        "security_groups": {
                            "references": [
                                "module.autoscaling_sg.security_group_id",
                                "module.autoscaling_sg"
                            ]
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        },
                        "user_data": {
                            "references": [
                                "local.user_data"
                            ]
                        },
                        "vpc_zone_identifier": {
                            "references": [
                                "module.vpc.private_subnets",
                                "module.vpc"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "autoscaling_group_arn": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].arn",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].arn",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The ARN for this AutoScaling Group"
                            },
                            "autoscaling_group_availability_zones": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].availability_zones",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].availability_zones",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The availability zones of the autoscale group"
                            },
                            "autoscaling_group_default_cooldown": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].default_cooldown",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].default_cooldown",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "Time between a scaling activity and the succeeding scaling activity"
                            },
                            "autoscaling_group_desired_capacity": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].desired_capacity",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].desired_capacity",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The number of Amazon EC2 instances that should be running in the group"
                            },
                            "autoscaling_group_enabled_metrics": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].enabled_metrics",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].enabled_metrics",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "List of metrics enabled for collection"
                            },
                            "autoscaling_group_health_check_grace_period": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].health_check_grace_period",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].health_check_grace_period",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "Time after instance comes into service before checking health"
                            },
                            "autoscaling_group_health_check_type": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].health_check_type",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].health_check_type",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "EC2 or ELB. Controls how health checking is done"
                            },
                            "autoscaling_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].id",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].id",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The autoscaling group id"
                            },
                            "autoscaling_group_load_balancers": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].load_balancers",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].load_balancers",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The load balancer names associated with the autoscaling group"
                            },
                            "autoscaling_group_max_size": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].max_size",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].max_size",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The maximum size of the autoscale group"
                            },
                            "autoscaling_group_min_size": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].min_size",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].min_size",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The minimum size of the autoscale group"
                            },
                            "autoscaling_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].name",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].name",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The autoscaling group name"
                            },
                            "autoscaling_group_target_group_arns": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].target_group_arns",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].target_group_arns",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "List of Target Group ARNs that apply to this AutoScaling Group"
                            },
                            "autoscaling_group_vpc_zone_identifier": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_group.this[0].vpc_zone_identifier",
                                        "aws_autoscaling_group.this[0]",
                                        "aws_autoscaling_group.this",
                                        "aws_autoscaling_group.idc[0].vpc_zone_identifier",
                                        "aws_autoscaling_group.idc[0]",
                                        "aws_autoscaling_group.idc"
                                    ]
                                },
                                "description": "The VPC zone identifier"
                            },
                            "autoscaling_policy_arns": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_policy.this"
                                    ]
                                },
                                "description": "ARNs of autoscaling policies"
                            },
                            "autoscaling_schedule_arns": {
                                "expression": {
                                    "references": [
                                        "aws_autoscaling_schedule.this"
                                    ]
                                },
                                "description": "ARNs of autoscaling group schedules"
                            },
                            "iam_instance_profile_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_instance_profile.this[0].arn",
                                        "aws_iam_instance_profile.this[0]",
                                        "aws_iam_instance_profile.this",
                                        "var.iam_instance_profile_arn"
                                    ]
                                },
                                "description": "ARN assigned by AWS to the instance profile"
                            },
                            "iam_instance_profile_id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_instance_profile.this[0].id",
                                        "aws_iam_instance_profile.this[0]",
                                        "aws_iam_instance_profile.this"
                                    ]
                                },
                                "description": "Instance profile's ID"
                            },
                            "iam_instance_profile_unique": {
                                "expression": {
                                    "references": [
                                        "aws_iam_instance_profile.this[0].unique_id",
                                        "aws_iam_instance_profile.this[0]",
                                        "aws_iam_instance_profile.this"
                                    ]
                                },
                                "description": "Stable and unique string identifying the IAM instance profile"
                            },
                            "iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.this[0].arn",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                    ]
                                },
                                "description": "The Amazon Resource Name (ARN) specifying the IAM role"
                            },
                            "iam_role_name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                    ]
                                },
                                "description": "The name of the IAM role"
                            },
                            "iam_role_unique_id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.this[0].unique_id",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                    ]
                                },
                                "description": "Stable and unique string identifying the IAM role"
                            },
                            "launch_template_arn": {
                                "expression": {
                                    "references": [
                                        "aws_launch_template.this[0].arn",
                                        "aws_launch_template.this[0]",
                                        "aws_launch_template.this"
                                    ]
                                },
                                "description": "The ARN of the launch template"
                            },
                            "launch_template_default_version": {
                                "expression": {
                                    "references": [
                                        "aws_launch_template.this[0].default_version",
                                        "aws_launch_template.this[0]",
                                        "aws_launch_template.this"
                                    ]
                                },
                                "description": "The default version of the launch template"
                            },
                            "launch_template_id": {
                                "expression": {
                                    "references": [
                                        "aws_launch_template.this[0].id",
                                        "aws_launch_template.this[0]",
                                        "aws_launch_template.this"
                                    ]
                                },
                                "description": "The ID of the launch template"
                            },
                            "launch_template_latest_version": {
                                "expression": {
                                    "references": [
                                        "aws_launch_template.this[0].latest_version",
                                        "aws_launch_template.this[0]",
                                        "aws_launch_template.this"
                                    ]
                                },
                                "description": "The latest version of the launch template"
                            },
                            "launch_template_name": {
                                "expression": {
                                    "references": [
                                        "aws_launch_template.this[0].name",
                                        "aws_launch_template.this[0]",
                                        "aws_launch_template.this"
                                    ]
                                },
                                "description": "The name of the launch template"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_autoscaling_group.idc",
                                "mode": "managed",
                                "type": "aws_autoscaling_group",
                                "name": "idc",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "availability_zones": {
                                        "references": [
                                            "var.availability_zones"
                                        ]
                                    },
                                    "capacity_rebalance": {
                                        "references": [
                                            "var.capacity_rebalance"
                                        ]
                                    },
                                    "default_cooldown": {
                                        "references": [
                                            "var.default_cooldown"
                                        ]
                                    },
                                    "default_instance_warmup": {
                                        "references": [
                                            "var.default_instance_warmup"
                                        ]
                                    },
                                    "desired_capacity": {
                                        "references": [
                                            "var.desired_capacity"
                                        ]
                                    },
                                    "desired_capacity_type": {
                                        "references": [
                                            "var.desired_capacity_type"
                                        ]
                                    },
                                    "enabled_metrics": {
                                        "references": [
                                            "var.enabled_metrics"
                                        ]
                                    },
                                    "force_delete": {
                                        "references": [
                                            "var.force_delete"
                                        ]
                                    },
                                    "health_check_grace_period": {
                                        "references": [
                                            "var.health_check_grace_period"
                                        ]
                                    },
                                    "health_check_type": {
                                        "references": [
                                            "var.health_check_type"
                                        ]
                                    },
                                    "ignore_failed_scaling_activities": {
                                        "references": [
                                            "var.ignore_failed_scaling_activities"
                                        ]
                                    },
                                    "load_balancers": {
                                        "references": [
                                            "var.load_balancers"
                                        ]
                                    },
                                    "max_instance_lifetime": {
                                        "references": [
                                            "var.max_instance_lifetime"
                                        ]
                                    },
                                    "max_size": {
                                        "references": [
                                            "var.max_size"
                                        ]
                                    },
                                    "metrics_granularity": {
                                        "references": [
                                            "var.metrics_granularity"
                                        ]
                                    },
                                    "min_elb_capacity": {
                                        "references": [
                                            "var.min_elb_capacity"
                                        ]
                                    },
                                    "min_size": {
                                        "references": [
                                            "var.min_size"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.use_name_prefix",
                                            "var.name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.use_name_prefix",
                                            "var.name"
                                        ]
                                    },
                                    "placement_group": {
                                        "references": [
                                            "var.placement_group"
                                        ]
                                    },
                                    "protect_from_scale_in": {
                                        "references": [
                                            "var.protect_from_scale_in"
                                        ]
                                    },
                                    "service_linked_role_arn": {
                                        "references": [
                                            "var.service_linked_role_arn"
                                        ]
                                    },
                                    "suspended_processes": {
                                        "references": [
                                            "var.suspended_processes"
                                        ]
                                    },
                                    "target_group_arns": {
                                        "references": [
                                            "var.target_group_arns"
                                        ]
                                    },
                                    "termination_policies": {
                                        "references": [
                                            "var.termination_policies"
                                        ]
                                    },
                                    "timeouts": {
                                        "delete": {
                                            "references": [
                                                "var.delete_timeout"
                                            ]
                                        }
                                    },
                                    "vpc_zone_identifier": {
                                        "references": [
                                            "var.vpc_zone_identifier"
                                        ]
                                    },
                                    "wait_for_capacity_timeout": {
                                        "references": [
                                            "var.wait_for_capacity_timeout"
                                        ]
                                    },
                                    "wait_for_elb_capacity": {
                                        "references": [
                                            "var.wait_for_elb_capacity"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ignore_desired_capacity_changes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_autoscaling_group.this",
                                "mode": "managed",
                                "type": "aws_autoscaling_group",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "availability_zones": {
                                        "references": [
                                            "var.availability_zones"
                                        ]
                                    },
                                    "capacity_rebalance": {
                                        "references": [
                                            "var.capacity_rebalance"
                                        ]
                                    },
                                    "default_cooldown": {
                                        "references": [
                                            "var.default_cooldown"
                                        ]
                                    },
                                    "default_instance_warmup": {
                                        "references": [
                                            "var.default_instance_warmup"
                                        ]
                                    },
                                    "desired_capacity": {
                                        "references": [
                                            "var.desired_capacity"
                                        ]
                                    },
                                    "desired_capacity_type": {
                                        "references": [
                                            "var.desired_capacity_type"
                                        ]
                                    },
                                    "enabled_metrics": {
                                        "references": [
                                            "var.enabled_metrics"
                                        ]
                                    },
                                    "force_delete": {
                                        "references": [
                                            "var.force_delete"
                                        ]
                                    },
                                    "health_check_grace_period": {
                                        "references": [
                                            "var.health_check_grace_period"
                                        ]
                                    },
                                    "health_check_type": {
                                        "references": [
                                            "var.health_check_type"
                                        ]
                                    },
                                    "ignore_failed_scaling_activities": {
                                        "references": [
                                            "var.ignore_failed_scaling_activities"
                                        ]
                                    },
                                    "load_balancers": {
                                        "references": [
                                            "var.load_balancers"
                                        ]
                                    },
                                    "max_instance_lifetime": {
                                        "references": [
                                            "var.max_instance_lifetime"
                                        ]
                                    },
                                    "max_size": {
                                        "references": [
                                            "var.max_size"
                                        ]
                                    },
                                    "metrics_granularity": {
                                        "references": [
                                            "var.metrics_granularity"
                                        ]
                                    },
                                    "min_elb_capacity": {
                                        "references": [
                                            "var.min_elb_capacity"
                                        ]
                                    },
                                    "min_size": {
                                        "references": [
                                            "var.min_size"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.use_name_prefix",
                                            "var.name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.use_name_prefix",
                                            "var.name"
                                        ]
                                    },
                                    "placement_group": {
                                        "references": [
                                            "var.placement_group"
                                        ]
                                    },
                                    "protect_from_scale_in": {
                                        "references": [
                                            "var.protect_from_scale_in"
                                        ]
                                    },
                                    "service_linked_role_arn": {
                                        "references": [
                                            "var.service_linked_role_arn"
                                        ]
                                    },
                                    "suspended_processes": {
                                        "references": [
                                            "var.suspended_processes"
                                        ]
                                    },
                                    "target_group_arns": {
                                        "references": [
                                            "var.target_group_arns"
                                        ]
                                    },
                                    "termination_policies": {
                                        "references": [
                                            "var.termination_policies"
                                        ]
                                    },
                                    "timeouts": {
                                        "delete": {
                                            "references": [
                                                "var.delete_timeout"
                                            ]
                                        }
                                    },
                                    "vpc_zone_identifier": {
                                        "references": [
                                            "var.vpc_zone_identifier"
                                        ]
                                    },
                                    "wait_for_capacity_timeout": {
                                        "references": [
                                            "var.wait_for_capacity_timeout"
                                        ]
                                    },
                                    "wait_for_elb_capacity": {
                                        "references": [
                                            "var.wait_for_elb_capacity"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ignore_desired_capacity_changes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_autoscaling_policy.this",
                                "mode": "managed",
                                "type": "aws_autoscaling_policy",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "adjustment_type": {
                                        "references": [
                                            "each.value.adjustment_type",
                                            "each.value"
                                        ]
                                    },
                                    "autoscaling_group_name": {
                                        "references": [
                                            "var.ignore_desired_capacity_changes",
                                            "aws_autoscaling_group.idc[0].name",
                                            "aws_autoscaling_group.idc[0]",
                                            "aws_autoscaling_group.idc",
                                            "aws_autoscaling_group.this[0].name",
                                            "aws_autoscaling_group.this[0]",
                                            "aws_autoscaling_group.this"
                                        ]
                                    },
                                    "cooldown": {
                                        "references": [
                                            "each.value.cooldown",
                                            "each.value"
                                        ]
                                    },
                                    "estimated_instance_warmup": {
                                        "references": [
                                            "each.value.estimated_instance_warmup",
                                            "each.value"
                                        ]
                                    },
                                    "metric_aggregation_type": {
                                        "references": [
                                            "each.value.metric_aggregation_type",
                                            "each.value"
                                        ]
                                    },
                                    "min_adjustment_magnitude": {
                                        "references": [
                                            "each.value.min_adjustment_magnitude",
                                            "each.value"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "each.value.name",
                                            "each.value",
                                            "each.key"
                                        ]
                                    },
                                    "policy_type": {
                                        "references": [
                                            "each.value.policy_type",
                                            "each.value"
                                        ]
                                    },
                                    "scaling_adjustment": {
                                        "references": [
                                            "each.value.scaling_adjustment",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.scaling_policies",
                                        "local.create",
                                        "var.create_scaling_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_autoscaling_schedule.this",
                                "mode": "managed",
                                "type": "aws_autoscaling_schedule",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "autoscaling_group_name": {
                                        "references": [
                                            "aws_autoscaling_group.this[0].name",
                                            "aws_autoscaling_group.this[0]",
                                            "aws_autoscaling_group.this",
                                            "aws_autoscaling_group.idc[0].name",
                                            "aws_autoscaling_group.idc[0]",
                                            "aws_autoscaling_group.idc"
                                        ]
                                    },
                                    "desired_capacity": {
                                        "references": [
                                            "each.value.desired_capacity",
                                            "each.value"
                                        ]
                                    },
                                    "end_time": {
                                        "references": [
                                            "each.value.end_time",
                                            "each.value"
                                        ]
                                    },
                                    "max_size": {
                                        "references": [
                                            "each.value.max_size",
                                            "each.value"
                                        ]
                                    },
                                    "min_size": {
                                        "references": [
                                            "each.value.min_size",
                                            "each.value"
                                        ]
                                    },
                                    "recurrence": {
                                        "references": [
                                            "each.value.recurrence",
                                            "each.value"
                                        ]
                                    },
                                    "scheduled_action_name": {
                                        "references": [
                                            "each.key"
                                        ]
                                    },
                                    "start_time": {
                                        "references": [
                                            "each.value.start_time",
                                            "each.value"
                                        ]
                                    },
                                    "time_zone": {
                                        "references": [
                                            "each.value.time_zone",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_schedule",
                                        "var.schedules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_autoscaling_traffic_source_attachment.this",
                                "mode": "managed",
                                "type": "aws_autoscaling_traffic_source_attachment",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "autoscaling_group_name": {
                                        "references": [
                                            "var.ignore_desired_capacity_changes",
                                            "aws_autoscaling_group.idc[0].id",
                                            "aws_autoscaling_group.idc[0]",
                                            "aws_autoscaling_group.idc",
                                            "aws_autoscaling_group.this[0].id",
                                            "aws_autoscaling_group.this[0]",
                                            "aws_autoscaling_group.this"
                                        ]
                                    },
                                    "traffic_source": [
                                        {
                                            "identifier": {
                                                "references": [
                                                    "var.traffic_source_identifier"
                                                ]
                                            },
                                            "type": {
                                                "references": [
                                                    "var.traffic_source_type"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_traffic_source_attachment"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_instance_profile.this",
                                "mode": "managed",
                                "type": "aws_iam_instance_profile",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "var.iam_role_use_name_prefix",
                                            "var.iam_role_name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.iam_role_use_name_prefix",
                                            "var.iam_role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.iam_role_path"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.this[0].name",
                                            "aws_iam_role.this[0]",
                                            "aws_iam_role.this"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.iam_role_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_iam_instance_profile"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.this",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.assume_role_policy[0].json",
                                            "data.aws_iam_policy_document.assume_role_policy[0]",
                                            "data.aws_iam_policy_document.assume_role_policy"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.iam_role_description"
                                        ]
                                    },
                                    "force_detach_policies": {
                                        "constant_value": true
                                    },
                                    "name": {
                                        "references": [
                                            "var.iam_role_use_name_prefix",
                                            "local.internal_iam_instance_profile_name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.iam_role_use_name_prefix",
                                            "local.internal_iam_instance_profile_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.iam_role_path"
                                        ]
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.iam_role_permissions_boundary"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.iam_role_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_iam_instance_profile"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.this",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.this[0].name",
                                            "aws_iam_role.this[0]",
                                            "aws_iam_role.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.iam_role_policies",
                                        "var.create",
                                        "var.create_iam_instance_profile"
                                    ]
                                }
                            },
                            {
                                "address": "aws_launch_template.this",
                                "mode": "managed",
                                "type": "aws_launch_template",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "default_version": {
                                        "references": [
                                            "var.default_version"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.launch_template_description"
                                        ]
                                    },
                                    "disable_api_stop": {
                                        "references": [
                                            "var.disable_api_stop"
                                        ]
                                    },
                                    "disable_api_termination": {
                                        "references": [
                                            "var.disable_api_termination"
                                        ]
                                    },
                                    "ebs_optimized": {
                                        "references": [
                                            "var.ebs_optimized"
                                        ]
                                    },
                                    "image_id": {
                                        "references": [
                                            "var.image_id"
                                        ]
                                    },
                                    "instance_initiated_shutdown_behavior": {
                                        "references": [
                                            "var.instance_initiated_shutdown_behavior"
                                        ]
                                    },
                                    "instance_type": {
                                        "references": [
                                            "var.instance_type"
                                        ]
                                    },
                                    "kernel_id": {
                                        "references": [
                                            "var.kernel_id"
                                        ]
                                    },
                                    "key_name": {
                                        "references": [
                                            "var.key_name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.launch_template_use_name_prefix",
                                            "local.launch_template_name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.launch_template_use_name_prefix",
                                            "local.launch_template_name"
                                        ]
                                    },
                                    "ram_disk_id": {
                                        "references": [
                                            "var.ram_disk_id"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    },
                                    "update_default_version": {
                                        "references": [
                                            "var.update_default_version"
                                        ]
                                    },
                                    "user_data": {
                                        "references": [
                                            "var.user_data"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.network_interfaces",
                                            "var.security_groups"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_launch_template"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.assume_role_policy",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRole"
                                                ]
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "data.aws_partition.current.dns_suffix",
                                                            "data.aws_partition.current"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ],
                                            "sid": {
                                                "constant_value": "EC2AssumeRole"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_iam_instance_profile"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_partition.current",
                                "mode": "data",
                                "type": "aws_partition",
                                "name": "current",
                                "provider_config_key": "aws",
                                "schema_version": 0
                            }
                        ],
                        "variables": {
                            "autoscaling_group_tags": {
                                "default": {},
                                "description": "A map of additional tags to add to the autoscaling group"
                            },
                            "availability_zones": {
                                "default": null,
                                "description": "A list of one or more availability zones for the group. Used for EC2-Classic and default subnets when not specified with `vpc_zone_identifier` argument. Conflicts with `vpc_zone_identifier`"
                            },
                            "block_device_mappings": {
                                "default": [],
                                "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
                            },
                            "capacity_rebalance": {
                                "default": null,
                                "description": "Indicates whether capacity rebalance is enabled"
                            },
                            "capacity_reservation_specification": {
                                "default": {},
                                "description": "Targeting for EC2 capacity reservations"
                            },
                            "cpu_options": {
                                "default": {},
                                "description": "The CPU options for the instance"
                            },
                            "create": {
                                "default": true,
                                "description": "Determines whether to create autoscaling group or not"
                            },
                            "create_iam_instance_profile": {
                                "default": false,
                                "description": "Determines whether an IAM instance profile is created or to use an existing IAM instance profile"
                            },
                            "create_launch_template": {
                                "default": true,
                                "description": "Determines whether to create launch template or not"
                            },
                            "create_scaling_policy": {
                                "default": true,
                                "description": "Determines whether to create target scaling policy schedule or not"
                            },
                            "create_schedule": {
                                "default": true,
                                "description": "Determines whether to create autoscaling group schedule or not"
                            },
                            "create_traffic_source_attachment": {
                                "default": false,
                                "description": "Determines whether to create autoscaling group traffic source attachment"
                            },
                            "credit_specification": {
                                "default": {},
                                "description": "Customize the credit specification of the instance"
                            },
                            "default_cooldown": {
                                "default": null,
                                "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start"
                            },
                            "default_instance_warmup": {
                                "default": null,
                                "description": "Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state."
                            },
                            "default_version": {
                                "default": null,
                                "description": "Default Version of the launch template"
                            },
                            "delete_timeout": {
                                "default": null,
                                "description": "Delete timeout to wait for destroying autoscaling group"
                            },
                            "desired_capacity": {
                                "default": null,
                                "description": "The number of Amazon EC2 instances that should be running in the autoscaling group"
                            },
                            "desired_capacity_type": {
                                "default": null,
                                "description": "The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: `units`, `vcpu`, `memory-mib`."
                            },
                            "disable_api_stop": {
                                "default": null,
                                "description": "If true, enables EC2 instance stop protection"
                            },
                            "disable_api_termination": {
                                "default": null,
                                "description": "If true, enables EC2 instance termination protection"
                            },
                            "ebs_optimized": {
                                "default": null,
                                "description": "If true, the launched EC2 instance will be EBS-optimized"
                            },
                            "elastic_gpu_specifications": {
                                "default": {},
                                "description": "The elastic GPU to attach to the instance"
                            },
                            "elastic_inference_accelerator": {
                                "default": {},
                                "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
                            },
                            "enable_monitoring": {
                                "default": true,
                                "description": "Enables/disables detailed monitoring"
                            },
                            "enabled_metrics": {
                                "default": [],
                                "description": "A list of metrics to collect. The allowed values are `GroupDesiredCapacity`, `GroupInServiceCapacity`, `GroupPendingCapacity`, `GroupMinSize`, `GroupMaxSize`, `GroupInServiceInstances`, `GroupPendingInstances`, `GroupStandbyInstances`, `GroupStandbyCapacity`, `GroupTerminatingCapacity`, `GroupTerminatingInstances`, `GroupTotalCapacity`, `GroupTotalInstances`"
                            },
                            "enclave_options": {
                                "default": {},
                                "description": "Enable Nitro Enclaves on launched instances"
                            },
                            "force_delete": {
                                "default": null,
                                "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the pool to terminate. You can force an Auto Scaling Group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling"
                            },
                            "health_check_grace_period": {
                                "default": null,
                                "description": "Time (in seconds) after instance comes into service before checking health"
                            },
                            "health_check_type": {
                                "default": null,
                                "description": "`EC2` or `ELB`. Controls how health checking is done"
                            },
                            "hibernation_options": {
                                "default": {},
                                "description": "The hibernation options for the instance"
                            },
                            "iam_instance_profile_arn": {
                                "default": null,
                                "description": "Amazon Resource Name (ARN) of an existing IAM instance profile. Used when `create_iam_instance_profile` = `false`"
                            },
                            "iam_instance_profile_name": {
                                "default": null,
                                "description": "The name of the IAM instance profile to be created (`create_iam_instance_profile` = `true`) or existing (`create_iam_instance_profile` = `false`)"
                            },
                            "iam_role_description": {
                                "default": null,
                                "description": "Description of the role"
                            },
                            "iam_role_name": {
                                "default": null,
                                "description": "Name to use on IAM role created"
                            },
                            "iam_role_path": {
                                "default": null,
                                "description": "IAM role path"
                            },
                            "iam_role_permissions_boundary": {
                                "default": null,
                                "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                            },
                            "iam_role_policies": {
                                "default": {},
                                "description": "IAM policies to attach to the IAM role"
                            },
                            "iam_role_tags": {
                                "default": {},
                                "description": "A map of additional tags to add to the IAM role created"
                            },
                            "iam_role_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
                            },
                            "ignore_desired_capacity_changes": {
                                "default": false,
                                "description": "Determines whether the `desired_capacity` value is ignored after initial apply. See README note for more details"
                            },
                            "ignore_failed_scaling_activities": {
                                "default": false,
                                "description": "Whether to ignore failed Auto Scaling scaling activities while waiting for capacity. The default is false -- failed scaling activities cause errors to be returned."
                            },
                            "image_id": {
                                "default": "",
                                "description": "The AMI from which to launch the instance"
                            },
                            "initial_lifecycle_hooks": {
                                "default": [],
                                "description": "One or more Lifecycle Hooks to attach to the Auto Scaling Group before instances are launched. The syntax is exactly the same as the separate `aws_autoscaling_lifecycle_hook` resource, without the `autoscaling_group_name` attribute. Please note that this will only work when creating a new Auto Scaling Group. For all other use-cases, please use `aws_autoscaling_lifecycle_hook` resource"
                            },
                            "instance_initiated_shutdown_behavior": {
                                "default": null,
                                "description": "Shutdown behavior for the instance. Can be `stop` or `terminate`. (Default: `stop`)"
                            },
                            "instance_maintenance_policy": {
                                "default": {},
                                "description": "If this block is configured, add a instance maintenance policy to the specified Auto Scaling group"
                            },
                            "instance_market_options": {
                                "default": {},
                                "description": "The market (purchasing) option for the instance"
                            },
                            "instance_name": {
                                "default": "",
                                "description": "Name that is propogated to launched EC2 instances via a tag - if not provided, defaults to `var.name`"
                            },
                            "instance_refresh": {
                                "default": {},
                                "description": "If this block is configured, start an Instance Refresh when this Auto Scaling Group is updated"
                            },
                            "instance_requirements": {
                                "default": {},
                                "description": "The attribute requirements for the type of instance. If present then `instance_type` cannot be present"
                            },
                            "instance_type": {
                                "default": null,
                                "description": "The type of the instance. If present then `instance_requirements` cannot be present"
                            },
                            "kernel_id": {
                                "default": null,
                                "description": "The kernel ID"
                            },
                            "key_name": {
                                "default": null,
                                "description": "The key name that should be used for the instance"
                            },
                            "launch_template_description": {
                                "default": null,
                                "description": "Description of the launch template"
                            },
                            "launch_template_id": {
                                "default": null,
                                "description": "ID of an existing launch template to be used (created outside of this module)"
                            },
                            "launch_template_name": {
                                "default": "",
                                "description": "Name of launch template to be created"
                            },
                            "launch_template_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
                            },
                            "launch_template_version": {
                                "default": null,
                                "description": "Launch template version. Can be version number, `$Latest`, or `$Default`"
                            },
                            "license_specifications": {
                                "default": {},
                                "description": "A list of license specifications to associate with"
                            },
                            "load_balancers": {
                                "default": [],
                                "description": "A list of elastic load balancer names to add to the autoscaling group names. Only valid for classic load balancers. For ALBs, use `target_group_arns` instead"
                            },
                            "maintenance_options": {
                                "default": {},
                                "description": "The maintenance options for the instance"
                            },
                            "max_instance_lifetime": {
                                "default": null,
                                "description": "The maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds"
                            },
                            "max_size": {
                                "default": null,
                                "description": "The maximum size of the autoscaling group"
                            },
                            "metadata_options": {
                                "default": {},
                                "description": "Customize the metadata options for the instance"
                            },
                            "metrics_granularity": {
                                "default": null,
                                "description": "The granularity to associate with the metrics to collect. The only valid value is `1Minute`"
                            },
                            "min_elb_capacity": {
                                "default": null,
                                "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes"
                            },
                            "min_size": {
                                "default": null,
                                "description": "The minimum size of the autoscaling group"
                            },
                            "mixed_instances_policy": {
                                "default": null,
                                "description": "Configuration block containing settings to define launch targets for Auto Scaling groups"
                            },
                            "name": {
                                "description": "Name used across the resources created"
                            },
                            "network_interfaces": {
                                "default": [],
                                "description": "Customize network interfaces to be attached at instance boot time"
                            },
                            "placement": {
                                "default": {},
                                "description": "The placement of the instance"
                            },
                            "placement_group": {
                                "default": null,
                                "description": "The name of the placement group into which you'll launch your instances, if any"
                            },
                            "private_dns_name_options": {
                                "default": {},
                                "description": "The options for the instance hostname. The default values are inherited from the subnet"
                            },
                            "protect_from_scale_in": {
                                "default": false,
                                "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "ram_disk_id": {
                                "default": null,
                                "description": "The ID of the ram disk"
                            },
                            "scaling_policies": {
                                "default": {},
                                "description": "Map of target scaling policy schedule to create"
                            },
                            "schedules": {
                                "default": {},
                                "description": "Map of autoscaling group schedule to create"
                            },
                            "security_groups": {
                                "default": [],
                                "description": "A list of security group IDs to associate"
                            },
                            "service_linked_role_arn": {
                                "default": null,
                                "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
                            },
                            "suspended_processes": {
                                "default": [],
                                "description": "A list of processes to suspend for the Auto Scaling Group. The allowed values are `Launch`, `Terminate`, `HealthCheck`, `ReplaceUnhealthy`, `AZRebalance`, `AlarmNotification`, `ScheduledActions`, `AddToLoadBalancer`, `InstanceRefresh`. Note that if you suspend either the `Launch` or `Terminate` process types, it can prevent your Auto Scaling Group from functioning properly"
                            },
                            "tag_specifications": {
                                "default": [],
                                "description": "The tags to apply to the resources during launch"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to assign to resources"
                            },
                            "target_group_arns": {
                                "default": [],
                                "description": "A set of `aws_alb_target_group` ARNs, for use with Application or Network Load Balancing"
                            },
                            "termination_policies": {
                                "default": [],
                                "description": "A list of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are `OldestInstance`, `NewestInstance`, `OldestLaunchConfiguration`, `ClosestToNextInstanceHour`, `OldestLaunchTemplate`, `AllocationStrategy`, `Default`"
                            },
                            "traffic_source_identifier": {
                                "default": "",
                                "description": "Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region"
                            },
                            "traffic_source_type": {
                                "default": "elbv2",
                                "description": "Provides additional context for the value of identifier. The following lists the valid values: `elb` if `identifier` is the name of a Classic Load Balancer. `elbv2` if `identifier` is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group. `vpc-lattice` if `identifier` is the ARN of a VPC Lattice target group"
                            },
                            "update_default_version": {
                                "default": null,
                                "description": "Whether to update Default Version each update. Conflicts with `default_version`"
                            },
                            "use_mixed_instances_policy": {
                                "default": false,
                                "description": "Determines whether to use a mixed instances policy in the autoscaling group or not"
                            },
                            "use_name_prefix": {
                                "default": true,
                                "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
                            },
                            "user_data": {
                                "default": null,
                                "description": "The Base64-encoded user data to provide when launching the instance"
                            },
                            "vpc_zone_identifier": {
                                "default": null,
                                "description": "A list of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with `availability_zones`"
                            },
                            "wait_for_capacity_timeout": {
                                "default": null,
                                "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
                            },
                            "wait_for_elb_capacity": {
                                "default": null,
                                "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over `min_elb_capacity` behavior."
                            },
                            "warm_pool": {
                                "default": {},
                                "description": "If this block is configured, add a Warm Pool to the specified Auto Scaling group"
                            }
                        }
                    },
                    "version_constraint": "~\u003e 7.2"
                },
                "autoscaling_sg": {
                    "source": "terraform-aws-modules/security-group/aws",
                    "expressions": {
                        "description": {
                            "constant_value": "Autoscaling group security group"
                        },
                        "egress_rules": {
                            "constant_value": [
                                "all-all"
                            ]
                        },
                        "ingress_cidr_blocks": {
                            "references": [
                                "module.vpc.vpc_cidr_block",
                                "module.vpc"
                            ]
                        },
                        "ingress_rules": {
                            "constant_value": [
                                "http-80-tcp"
                            ]
                        },
                        "name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "security_group_arn": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].arn",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].arn",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The ARN of the security group"
                            },
                            "security_group_description": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].description",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].description",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The description of the security group"
                            },
                            "security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].id",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].id",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The ID of the security group"
                            },
                            "security_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].name",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].name",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The name of the security group"
                            },
                            "security_group_owner_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].owner_id",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].owner_id",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The owner ID"
                            },
                            "security_group_vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.this[0].vpc_id",
                                        "aws_security_group.this[0]",
                                        "aws_security_group.this",
                                        "aws_security_group.this_name_prefix[0].vpc_id",
                                        "aws_security_group.this_name_prefix[0]",
                                        "aws_security_group.this_name_prefix"
                                    ]
                                },
                                "description": "The VPC ID"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_security_group.this",
                                "mode": "managed",
                                "type": "aws_security_group",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "revoke_rules_on_delete": {
                                        "references": [
                                            "var.revoke_rules_on_delete"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.create_timeout"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.delete_timeout"
                                            ]
                                        }
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_sg",
                                        "var.use_name_prefix"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group.this_name_prefix",
                                "mode": "managed",
                                "type": "aws_security_group",
                                "name": "this_name_prefix",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "revoke_rules_on_delete": {
                                        "references": [
                                            "var.revoke_rules_on_delete"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.create_timeout"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.delete_timeout"
                                            ]
                                        }
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_sg",
                                        "var.use_name_prefix"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_prefix_list_ids",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_prefix_list_ids",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.number_of_computed_egress_with_prefix_list_ids"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_egress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_egress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_egress_with_source_security_group_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.computed_ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_prefix_list_ids",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_prefix_list_ids",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.number_of_computed_ingress_with_prefix_list_ids"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.computed_ingress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "computed_ingress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.computed_ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.number_of_computed_ingress_with_source_security_group_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.egress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.egress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.egress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_prefix_list_ids",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_prefix_list_ids",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.egress_with_prefix_list_ids"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.egress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "egress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.egress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.egress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.egress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "egress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.egress_with_source_security_group_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_rules",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_rules",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.rules",
                                            "var.ingress_rules",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_blocks": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.ingress_cidr_blocks"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_ipv6_cidr_blocks",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_ipv6_cidr_blocks",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_blocks": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.ingress_ipv6_cidr_blocks"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_ipv6_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_ipv6_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_prefix_list_ids",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_prefix_list_ids",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_prefix_list_ids",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.ingress_with_prefix_list_ids"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_self",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_self",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "self": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_self",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_self",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_self"
                                    ]
                                }
                            },
                            {
                                "address": "aws_security_group_rule.ingress_with_source_security_group_id",
                                "mode": "managed",
                                "type": "aws_security_group_rule",
                                "name": "ingress_with_source_security_group_id",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "prefix_list_ids": {
                                        "references": [
                                            "var.ingress_prefix_list_ids"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "security_group_id": {
                                        "references": [
                                            "local.this_sg_id"
                                        ]
                                    },
                                    "source_security_group_id": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.ingress_with_source_security_group_id",
                                            "count.index",
                                            "var.rules",
                                            "var.ingress_with_source_security_group_id",
                                            "count.index"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ingress"
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.ingress_with_source_security_group_id"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "auto_groups": {
                                "default": {
                                    "activemq": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "activemq-5671-tcp",
                                            "activemq-8883-tcp",
                                            "activemq-61614-tcp",
                                            "activemq-61617-tcp",
                                            "activemq-61619-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "alertmanager": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "alertmanager-9093-tcp",
                                            "alertmanager-9094-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "carbon-relay-ng": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "carbon-line-in-tcp",
                                            "carbon-line-in-udp",
                                            "carbon-pickle-tcp",
                                            "carbon-pickle-udp",
                                            "carbon-gui-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "cassandra": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "cassandra-clients-tcp",
                                            "cassandra-thrift-clients-tcp",
                                            "cassandra-jmx-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "consul": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "consul-tcp",
                                            "consul-grpc-tcp",
                                            "consul-grpc-tcp-tls",
                                            "consul-webui-http-tcp",
                                            "consul-webui-https-tcp",
                                            "consul-dns-tcp",
                                            "consul-dns-udp",
                                            "consul-serf-lan-tcp",
                                            "consul-serf-lan-udp",
                                            "consul-serf-wan-tcp",
                                            "consul-serf-wan-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "dax-cluster": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "dax-cluster-unencrypted-tcp",
                                            "dax-cluster-encrypted-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "docker-swarm": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "docker-swarm-mngmt-tcp",
                                            "docker-swarm-node-tcp",
                                            "docker-swarm-node-udp",
                                            "docker-swarm-overlay-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "elasticsearch": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "elasticsearch-rest-tcp",
                                            "elasticsearch-java-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "etcd": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "etcd-client-tcp",
                                            "etcd-peer-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "grafana": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "grafana-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "graphite-statsd": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "graphite-webui",
                                            "graphite-2003-tcp",
                                            "graphite-2004-tcp",
                                            "graphite-2023-tcp",
                                            "graphite-2024-tcp",
                                            "graphite-8080-tcp",
                                            "graphite-8125-tcp",
                                            "graphite-8125-udp",
                                            "graphite-8126-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "http-80": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "http-80-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "http-8080": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "http-8080-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "https-443": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "https-443-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "https-8443": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "https-8443-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ipsec-4500": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ipsec-4500-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ipsec-500": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ipsec-500-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "kafka": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "kafka-broker-tcp",
                                            "kafka-broker-tls-tcp",
                                            "kafka-broker-tls-public-tcp",
                                            "kafka-broker-sasl-scram-tcp",
                                            "kafka-broker-sasl-scram-tcp",
                                            "kafka-broker-sasl-iam-tcp",
                                            "kafka-broker-sasl-iam-public-tcp",
                                            "kafka-jmx-exporter-tcp",
                                            "kafka-node-exporter-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "kibana": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "kibana-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "kubernetes-api": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "kubernetes-api-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ldap": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ldap-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ldaps": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ldaps-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "logstash": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "logstash-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "loki": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "loki-grafana",
                                            "loki-grafana-grpc"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "memcached": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "memcached-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "minio": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "minio-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "mongodb": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "mongodb-27017-tcp",
                                            "mongodb-27018-tcp",
                                            "mongodb-27019-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "mssql": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "mssql-tcp",
                                            "mssql-udp",
                                            "mssql-analytics-tcp",
                                            "mssql-broker-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "mysql": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "mysql-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "nfs": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "nfs-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "nomad": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "nomad-http-tcp",
                                            "nomad-rpc-tcp",
                                            "nomad-serf-tcp",
                                            "nomad-serf-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ntp": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ntp-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "openvpn": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "openvpn-udp",
                                            "openvpn-tcp",
                                            "openvpn-https-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "oracle-db": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "oracle-db-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "postgresql": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "postgresql-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "prometheus": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "prometheus-http-tcp",
                                            "prometheus-pushgateway-http-tcp",
                                            "prometheus-node-exporter-http-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "promtail": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "promtail-http"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "puppet": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "puppet-tcp",
                                            "puppetdb-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "rabbitmq": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "rabbitmq-4369-tcp",
                                            "rabbitmq-5671-tcp",
                                            "rabbitmq-5672-tcp",
                                            "rabbitmq-15672-tcp",
                                            "rabbitmq-25672-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "rdp": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "rdp-tcp",
                                            "rdp-udp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "redis": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "redis-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "redshift": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "redshift-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "smtp": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "smtp-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "smtp-submission": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "smtp-submission-587-tcp",
                                            "smtp-submission-2587-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "smtps": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "smtps-465-tcp",
                                            "smtps-2465-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "solr": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "solr-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "splunk": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "splunk-indexer-tcp",
                                            "splunk-clients-tcp",
                                            "splunk-splunkd-tcp",
                                            "splunk-hec-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "squid": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "squid-proxy-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "ssh": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "ssh-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "storm": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "storm-nimbus-tcp",
                                            "storm-ui-tcp",
                                            "storm-supervisor-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "vault": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "vault-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "wazuh": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "wazuh-server-agent-connection-tcp",
                                            "wazuh-server-agent-connection-udp",
                                            "wazuh-server-agent-enrollment",
                                            "wazuh-server-agent-cluster-daemon",
                                            "wazuh-server-syslog-collector-tcp",
                                            "wazuh-server-syslog-collector-udp",
                                            "wazuh-server-restful-api",
                                            "wazuh-indexer-restful-api",
                                            "wazuh-dashboard"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "web": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "http-80-tcp",
                                            "http-8080-tcp",
                                            "https-443-tcp",
                                            "web-jmx-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "winrm": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "winrm-http-tcp",
                                            "winrm-https-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "zabbix": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "zabbix-server",
                                            "zabbix-proxy",
                                            "zabbix-agent"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "zipkin": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "zipkin-admin-tcp",
                                            "zipkin-admin-query-tcp",
                                            "zipkin-admin-web-tcp",
                                            "zipkin-query-tcp",
                                            "zipkin-web-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    },
                                    "zookeeper": {
                                        "egress_rules": [
                                            "all-all"
                                        ],
                                        "ingress_rules": [
                                            "zookeeper-2181-tcp",
                                            "zookeeper-2182-tls-tcp",
                                            "zookeeper-2888-tcp",
                                            "zookeeper-3888-tcp",
                                            "zookeeper-jmx-tcp"
                                        ],
                                        "ingress_with_self": [
                                            "all-all"
                                        ]
                                    }
                                },
                                "description": "Map of groups of security group rules to use to generate modules (see update_groups.sh)"
                            },
                            "computed_egress_rules": {
                                "default": [],
                                "description": "List of computed egress rules to create by name"
                            },
                            "computed_egress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'cidr_blocks' is used"
                            },
                            "computed_egress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "computed_egress_with_prefix_list_ids": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'prefix_list_ids' is used only"
                            },
                            "computed_egress_with_self": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'self' is defined"
                            },
                            "computed_egress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of computed egress rules to create where 'source_security_group_id' is used"
                            },
                            "computed_ingress_rules": {
                                "default": [],
                                "description": "List of computed ingress rules to create by name"
                            },
                            "computed_ingress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'cidr_blocks' is used"
                            },
                            "computed_ingress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "computed_ingress_with_prefix_list_ids": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'prefix_list_ids' is used"
                            },
                            "computed_ingress_with_self": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'self' is defined"
                            },
                            "computed_ingress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of computed ingress rules to create where 'source_security_group_id' is used"
                            },
                            "create": {
                                "default": true,
                                "description": "Whether to create security group and all rules"
                            },
                            "create_sg": {
                                "default": true,
                                "description": "Whether to create security group"
                            },
                            "create_timeout": {
                                "default": "10m",
                                "description": "Time to wait for a security group to be created"
                            },
                            "delete_timeout": {
                                "default": "15m",
                                "description": "Time to wait for a security group to be deleted"
                            },
                            "description": {
                                "default": "Security Group managed by Terraform",
                                "description": "Description of security group"
                            },
                            "egress_cidr_blocks": {
                                "default": [
                                    "0.0.0.0/0"
                                ],
                                "description": "List of IPv4 CIDR ranges to use on all egress rules"
                            },
                            "egress_ipv6_cidr_blocks": {
                                "default": [
                                    "::/0"
                                ],
                                "description": "List of IPv6 CIDR ranges to use on all egress rules"
                            },
                            "egress_prefix_list_ids": {
                                "default": [],
                                "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules"
                            },
                            "egress_rules": {
                                "default": [],
                                "description": "List of egress rules to create by name"
                            },
                            "egress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of egress rules to create where 'cidr_blocks' is used"
                            },
                            "egress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of egress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "egress_with_prefix_list_ids": {
                                "default": [],
                                "description": "List of egress rules to create where 'prefix_list_ids' is used only"
                            },
                            "egress_with_self": {
                                "default": [],
                                "description": "List of egress rules to create where 'self' is defined"
                            },
                            "egress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of egress rules to create where 'source_security_group_id' is used"
                            },
                            "ingress_cidr_blocks": {
                                "default": [],
                                "description": "List of IPv4 CIDR ranges to use on all ingress rules"
                            },
                            "ingress_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of IPv6 CIDR ranges to use on all ingress rules"
                            },
                            "ingress_prefix_list_ids": {
                                "default": [],
                                "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules"
                            },
                            "ingress_rules": {
                                "default": [],
                                "description": "List of ingress rules to create by name"
                            },
                            "ingress_with_cidr_blocks": {
                                "default": [],
                                "description": "List of ingress rules to create where 'cidr_blocks' is used"
                            },
                            "ingress_with_ipv6_cidr_blocks": {
                                "default": [],
                                "description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "ingress_with_prefix_list_ids": {
                                "default": [],
                                "description": "List of ingress rules to create where 'prefix_list_ids' is used only"
                            },
                            "ingress_with_self": {
                                "default": [],
                                "description": "List of ingress rules to create where 'self' is defined"
                            },
                            "ingress_with_source_security_group_id": {
                                "default": [],
                                "description": "List of ingress rules to create where 'source_security_group_id' is used"
                            },
                            "name": {
                                "default": null,
                                "description": "Name of security group - not required if create_sg is false"
                            },
                            "number_of_computed_egress_rules": {
                                "default": 0,
                                "description": "Number of computed egress rules to create by name"
                            },
                            "number_of_computed_egress_with_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'cidr_blocks' is used"
                            },
                            "number_of_computed_egress_with_ipv6_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "number_of_computed_egress_with_prefix_list_ids": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'prefix_list_ids' is used only"
                            },
                            "number_of_computed_egress_with_self": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'self' is defined"
                            },
                            "number_of_computed_egress_with_source_security_group_id": {
                                "default": 0,
                                "description": "Number of computed egress rules to create where 'source_security_group_id' is used"
                            },
                            "number_of_computed_ingress_rules": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create by name"
                            },
                            "number_of_computed_ingress_with_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'cidr_blocks' is used"
                            },
                            "number_of_computed_ingress_with_ipv6_cidr_blocks": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used"
                            },
                            "number_of_computed_ingress_with_prefix_list_ids": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'prefix_list_ids' is used"
                            },
                            "number_of_computed_ingress_with_self": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'self' is defined"
                            },
                            "number_of_computed_ingress_with_source_security_group_id": {
                                "default": 0,
                                "description": "Number of computed ingress rules to create where 'source_security_group_id' is used"
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "revoke_rules_on_delete": {
                                "default": false,
                                "description": "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR."
                            },
                            "rules": {
                                "default": {
                                    "_": [
                                        "",
                                        "",
                                        ""
                                    ],
                                    "activemq-5671-tcp": [
                                        "5671",
                                        "5671",
                                        "tcp",
                                        "ActiveMQ AMQP"
                                    ],
                                    "activemq-61614-tcp": [
                                        "61614",
                                        "61614",
                                        "tcp",
                                        "ActiveMQ STOMP"
                                    ],
                                    "activemq-61617-tcp": [
                                        "61617",
                                        "61617",
                                        "tcp",
                                        "ActiveMQ OpenWire"
                                    ],
                                    "activemq-61619-tcp": [
                                        "61619",
                                        "61619",
                                        "tcp",
                                        "ActiveMQ WebSocket"
                                    ],
                                    "activemq-8883-tcp": [
                                        "8883",
                                        "8883",
                                        "tcp",
                                        "ActiveMQ MQTT"
                                    ],
                                    "alertmanager-9093-tcp": [
                                        "9093",
                                        "9093",
                                        "tcp",
                                        "Alert Manager"
                                    ],
                                    "alertmanager-9094-tcp": [
                                        "9094",
                                        "9094",
                                        "tcp",
                                        "Alert Manager Cluster"
                                    ],
                                    "all-all": [
                                        "-1",
                                        "-1",
                                        "-1",
                                        "All protocols"
                                    ],
                                    "all-icmp": [
                                        "-1",
                                        "-1",
                                        "icmp",
                                        "All IPV4 ICMP"
                                    ],
                                    "all-ipv6-icmp": [
                                        "-1",
                                        "-1",
                                        "58",
                                        "All IPV6 ICMP"
                                    ],
                                    "all-tcp": [
                                        "0",
                                        "65535",
                                        "tcp",
                                        "All TCP ports"
                                    ],
                                    "all-udp": [
                                        "0",
                                        "65535",
                                        "udp",
                                        "All UDP ports"
                                    ],
                                    "carbon-admin-tcp": [
                                        "2004",
                                        "2004",
                                        "tcp",
                                        "Carbon admin"
                                    ],
                                    "carbon-gui-udp": [
                                        "8081",
                                        "8081",
                                        "tcp",
                                        "Carbon GUI"
                                    ],
                                    "carbon-line-in-tcp": [
                                        "2003",
                                        "2003",
                                        "tcp",
                                        "Carbon line-in"
                                    ],
                                    "carbon-line-in-udp": [
                                        "2003",
                                        "2003",
                                        "udp",
                                        "Carbon line-in"
                                    ],
                                    "carbon-pickle-tcp": [
                                        "2013",
                                        "2013",
                                        "tcp",
                                        "Carbon pickle"
                                    ],
                                    "carbon-pickle-udp": [
                                        "2013",
                                        "2013",
                                        "udp",
                                        "Carbon pickle"
                                    ],
                                    "cassandra-clients-tcp": [
                                        "9042",
                                        "9042",
                                        "tcp",
                                        "Cassandra clients"
                                    ],
                                    "cassandra-jmx-tcp": [
                                        "7199",
                                        "7199",
                                        "tcp",
                                        "JMX"
                                    ],
                                    "cassandra-thrift-clients-tcp": [
                                        "9160",
                                        "9160",
                                        "tcp",
                                        "Cassandra Thrift clients"
                                    ],
                                    "consul-dns-tcp": [
                                        "8600",
                                        "8600",
                                        "tcp",
                                        "Consul DNS"
                                    ],
                                    "consul-dns-udp": [
                                        "8600",
                                        "8600",
                                        "udp",
                                        "Consul DNS"
                                    ],
                                    "consul-grpc-tcp": [
                                        "8502",
                                        "8502",
                                        "tcp",
                                        "Consul gRPC"
                                    ],
                                    "consul-grpc-tcp-tls": [
                                        "8503",
                                        "8503",
                                        "tcp",
                                        "Consul gRPC TLS"
                                    ],
                                    "consul-serf-lan-tcp": [
                                        "8301",
                                        "8301",
                                        "tcp",
                                        "Serf LAN"
                                    ],
                                    "consul-serf-lan-udp": [
                                        "8301",
                                        "8301",
                                        "udp",
                                        "Serf LAN"
                                    ],
                                    "consul-serf-wan-tcp": [
                                        "8302",
                                        "8302",
                                        "tcp",
                                        "Serf WAN"
                                    ],
                                    "consul-serf-wan-udp": [
                                        "8302",
                                        "8302",
                                        "udp",
                                        "Serf WAN"
                                    ],
                                    "consul-tcp": [
                                        "8300",
                                        "8300",
                                        "tcp",
                                        "Consul server"
                                    ],
                                    "consul-webui-http-tcp": [
                                        "8500",
                                        "8500",
                                        "tcp",
                                        "Consul web UI HTTP"
                                    ],
                                    "consul-webui-https-tcp": [
                                        "8501",
                                        "8501",
                                        "tcp",
                                        "Consul web UI HTTPS"
                                    ],
                                    "dax-cluster-encrypted-tcp": [
                                        "9111",
                                        "9111",
                                        "tcp",
                                        "DAX Cluster encrypted"
                                    ],
                                    "dax-cluster-unencrypted-tcp": [
                                        "8111",
                                        "8111",
                                        "tcp",
                                        "DAX Cluster unencrypted"
                                    ],
                                    "dns-tcp": [
                                        "53",
                                        "53",
                                        "tcp",
                                        "DNS"
                                    ],
                                    "dns-udp": [
                                        "53",
                                        "53",
                                        "udp",
                                        "DNS"
                                    ],
                                    "docker-swarm-mngmt-tcp": [
                                        "2377",
                                        "2377",
                                        "tcp",
                                        "Docker Swarm cluster management"
                                    ],
                                    "docker-swarm-node-tcp": [
                                        "7946",
                                        "7946",
                                        "tcp",
                                        "Docker Swarm node"
                                    ],
                                    "docker-swarm-node-udp": [
                                        "7946",
                                        "7946",
                                        "udp",
                                        "Docker Swarm node"
                                    ],
                                    "docker-swarm-overlay-udp": [
                                        "4789",
                                        "4789",
                                        "udp",
                                        "Docker Swarm Overlay Network Traffic"
                                    ],
                                    "elasticsearch-java-tcp": [
                                        "9300",
                                        "9300",
                                        "tcp",
                                        "Elasticsearch Java interface"
                                    ],
                                    "elasticsearch-rest-tcp": [
                                        "9200",
                                        "9200",
                                        "tcp",
                                        "Elasticsearch REST interface"
                                    ],
                                    "etcd-client-tcp": [
                                        "2379",
                                        "2379",
                                        "tcp",
                                        "Etcd Client"
                                    ],
                                    "etcd-peer-tcp": [
                                        "2380",
                                        "2380",
                                        "tcp",
                                        "Etcd Peer"
                                    ],
                                    "grafana-tcp": [
                                        "3000",
                                        "3000",
                                        "tcp",
                                        "Grafana Dashboard"
                                    ],
                                    "graphite-2003-tcp": [
                                        "2003",
                                        "2003",
                                        "tcp",
                                        "Carbon receiver plain text"
                                    ],
                                    "graphite-2004-tcp": [
                                        "2004",
                                        "2004",
                                        "tcp",
                                        "Carbon receiver pickle"
                                    ],
                                    "graphite-2023-tcp": [
                                        "2023",
                                        "2023",
                                        "tcp",
                                        "Carbon aggregator plaintext"
                                    ],
                                    "graphite-2024-tcp": [
                                        "2024",
                                        "2024",
                                        "tcp",
                                        "Carbon aggregator pickle"
                                    ],
                                    "graphite-8080-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "Graphite gunicorn port"
                                    ],
                                    "graphite-8125-tcp": [
                                        "8125",
                                        "8125",
                                        "tcp",
                                        "Statsd TCP"
                                    ],
                                    "graphite-8125-udp": [
                                        "8125",
                                        "8125",
                                        "udp",
                                        "Statsd UDP default"
                                    ],
                                    "graphite-8126-tcp": [
                                        "8126",
                                        "8126",
                                        "tcp",
                                        "Statsd admin"
                                    ],
                                    "graphite-webui": [
                                        "80",
                                        "80",
                                        "tcp",
                                        "Graphite admin interface"
                                    ],
                                    "http-80-tcp": [
                                        "80",
                                        "80",
                                        "tcp",
                                        "HTTP"
                                    ],
                                    "http-8080-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "HTTP"
                                    ],
                                    "https-443-tcp": [
                                        "443",
                                        "443",
                                        "tcp",
                                        "HTTPS"
                                    ],
                                    "https-8443-tcp": [
                                        "8443",
                                        "8443",
                                        "tcp",
                                        "HTTPS"
                                    ],
                                    "ipsec-4500-udp": [
                                        "4500",
                                        "4500",
                                        "udp",
                                        "IPSEC NAT-T"
                                    ],
                                    "ipsec-500-udp": [
                                        "500",
                                        "500",
                                        "udp",
                                        "IPSEC ISAKMP"
                                    ],
                                    "kafka-broker-sasl-iam-public-tcp": [
                                        "9198",
                                        "9198",
                                        "tcp",
                                        "Kafka SASL/IAM Public access control enabled (MSK specific)"
                                    ],
                                    "kafka-broker-sasl-iam-tcp": [
                                        "9098",
                                        "9098",
                                        "tcp",
                                        "Kafka SASL/IAM access control enabled (MSK specific)"
                                    ],
                                    "kafka-broker-sasl-scram-public-tcp": [
                                        "9196",
                                        "9196",
                                        "tcp",
                                        "Kafka SASL/SCRAM Public enabled broker (MSK specific)"
                                    ],
                                    "kafka-broker-sasl-scram-tcp": [
                                        "9096",
                                        "9096",
                                        "tcp",
                                        "Kafka SASL/SCRAM enabled broker (MSK specific)"
                                    ],
                                    "kafka-broker-tcp": [
                                        "9092",
                                        "9092",
                                        "tcp",
                                        "Kafka PLAINTEXT enable broker 0.8.2+"
                                    ],
                                    "kafka-broker-tls-public-tcp": [
                                        "9194",
                                        "9194",
                                        "tcp",
                                        "Kafka TLS Public enabled broker 0.8.2+ (MSK specific)"
                                    ],
                                    "kafka-broker-tls-tcp": [
                                        "9094",
                                        "9094",
                                        "tcp",
                                        "Kafka TLS enabled broker 0.8.2+"
                                    ],
                                    "kafka-jmx-exporter-tcp": [
                                        "11001",
                                        "11001",
                                        "tcp",
                                        "Kafka JMX Exporter"
                                    ],
                                    "kafka-node-exporter-tcp": [
                                        "11002",
                                        "11002",
                                        "tcp",
                                        "Kafka Node Exporter"
                                    ],
                                    "kibana-tcp": [
                                        "5601",
                                        "5601",
                                        "tcp",
                                        "Kibana Web Interface"
                                    ],
                                    "kubernetes-api-tcp": [
                                        "6443",
                                        "6443",
                                        "tcp",
                                        "Kubernetes API Server"
                                    ],
                                    "ldap-tcp": [
                                        "389",
                                        "389",
                                        "tcp",
                                        "LDAP"
                                    ],
                                    "ldaps-tcp": [
                                        "636",
                                        "636",
                                        "tcp",
                                        "LDAPS"
                                    ],
                                    "logstash-tcp": [
                                        "5044",
                                        "5044",
                                        "tcp",
                                        "Logstash"
                                    ],
                                    "loki-grafana": [
                                        "3100",
                                        "3100",
                                        "tcp",
                                        "Grafana Loki endpoint"
                                    ],
                                    "loki-grafana-grpc": [
                                        "9095",
                                        "9095",
                                        "tcp",
                                        "Grafana Loki GRPC"
                                    ],
                                    "memcached-tcp": [
                                        "11211",
                                        "11211",
                                        "tcp",
                                        "Memcached"
                                    ],
                                    "minio-tcp": [
                                        "9000",
                                        "9000",
                                        "tcp",
                                        "MinIO"
                                    ],
                                    "mongodb-27017-tcp": [
                                        "27017",
                                        "27017",
                                        "tcp",
                                        "MongoDB"
                                    ],
                                    "mongodb-27018-tcp": [
                                        "27018",
                                        "27018",
                                        "tcp",
                                        "MongoDB shard"
                                    ],
                                    "mongodb-27019-tcp": [
                                        "27019",
                                        "27019",
                                        "tcp",
                                        "MongoDB config server"
                                    ],
                                    "mssql-analytics-tcp": [
                                        "2383",
                                        "2383",
                                        "tcp",
                                        "MSSQL Analytics"
                                    ],
                                    "mssql-broker-tcp": [
                                        "4022",
                                        "4022",
                                        "tcp",
                                        "MSSQL Broker"
                                    ],
                                    "mssql-tcp": [
                                        "1433",
                                        "1433",
                                        "tcp",
                                        "MSSQL Server"
                                    ],
                                    "mssql-udp": [
                                        "1434",
                                        "1434",
                                        "udp",
                                        "MSSQL Browser"
                                    ],
                                    "mysql-tcp": [
                                        "3306",
                                        "3306",
                                        "tcp",
                                        "MySQL/Aurora"
                                    ],
                                    "nfs-tcp": [
                                        "2049",
                                        "2049",
                                        "tcp",
                                        "NFS/EFS"
                                    ],
                                    "nomad-http-tcp": [
                                        "4646",
                                        "4646",
                                        "tcp",
                                        "Nomad HTTP"
                                    ],
                                    "nomad-rpc-tcp": [
                                        "4647",
                                        "4647",
                                        "tcp",
                                        "Nomad RPC"
                                    ],
                                    "nomad-serf-tcp": [
                                        "4648",
                                        "4648",
                                        "tcp",
                                        "Serf"
                                    ],
                                    "nomad-serf-udp": [
                                        "4648",
                                        "4648",
                                        "udp",
                                        "Serf"
                                    ],
                                    "ntp-udp": [
                                        "123",
                                        "123",
                                        "udp",
                                        "NTP"
                                    ],
                                    "octopus-tentacle-tcp": [
                                        "10933",
                                        "10933",
                                        "tcp",
                                        "Octopus Tentacle"
                                    ],
                                    "openvpn-https-tcp": [
                                        "443",
                                        "443",
                                        "tcp",
                                        "OpenVPN"
                                    ],
                                    "openvpn-tcp": [
                                        "943",
                                        "943",
                                        "tcp",
                                        "OpenVPN"
                                    ],
                                    "openvpn-udp": [
                                        "1194",
                                        "1194",
                                        "udp",
                                        "OpenVPN"
                                    ],
                                    "oracle-db-tcp": [
                                        "1521",
                                        "1521",
                                        "tcp",
                                        "Oracle"
                                    ],
                                    "postgresql-tcp": [
                                        "5432",
                                        "5432",
                                        "tcp",
                                        "PostgreSQL"
                                    ],
                                    "prometheus-http-tcp": [
                                        "9090",
                                        "9090",
                                        "tcp",
                                        "Prometheus"
                                    ],
                                    "prometheus-node-exporter-http-tcp": [
                                        "9100",
                                        "9100",
                                        "tcp",
                                        "Prometheus Node Exporter"
                                    ],
                                    "prometheus-pushgateway-http-tcp": [
                                        "9091",
                                        "9091",
                                        "tcp",
                                        "Prometheus Pushgateway"
                                    ],
                                    "promtail-http": [
                                        "9080",
                                        "9080",
                                        "tcp",
                                        "Promtail endpoint"
                                    ],
                                    "puppet-tcp": [
                                        "8140",
                                        "8140",
                                        "tcp",
                                        "Puppet"
                                    ],
                                    "puppetdb-tcp": [
                                        "8081",
                                        "8081",
                                        "tcp",
                                        "PuppetDB"
                                    ],
                                    "rabbitmq-15672-tcp": [
                                        "15672",
                                        "15672",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rabbitmq-25672-tcp": [
                                        "25672",
                                        "25672",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rabbitmq-4369-tcp": [
                                        "4369",
                                        "4369",
                                        "tcp",
                                        "RabbitMQ epmd"
                                    ],
                                    "rabbitmq-5671-tcp": [
                                        "5671",
                                        "5671",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rabbitmq-5672-tcp": [
                                        "5672",
                                        "5672",
                                        "tcp",
                                        "RabbitMQ"
                                    ],
                                    "rdp-tcp": [
                                        "3389",
                                        "3389",
                                        "tcp",
                                        "Remote Desktop"
                                    ],
                                    "rdp-udp": [
                                        "3389",
                                        "3389",
                                        "udp",
                                        "Remote Desktop"
                                    ],
                                    "redis-tcp": [
                                        "6379",
                                        "6379",
                                        "tcp",
                                        "Redis"
                                    ],
                                    "redshift-tcp": [
                                        "5439",
                                        "5439",
                                        "tcp",
                                        "Redshift"
                                    ],
                                    "saltstack-tcp": [
                                        "4505",
                                        "4506",
                                        "tcp",
                                        "SaltStack"
                                    ],
                                    "smtp-submission-2587-tcp": [
                                        "2587",
                                        "2587",
                                        "tcp",
                                        "SMTP Submission"
                                    ],
                                    "smtp-submission-587-tcp": [
                                        "587",
                                        "587",
                                        "tcp",
                                        "SMTP Submission"
                                    ],
                                    "smtp-tcp": [
                                        "25",
                                        "25",
                                        "tcp",
                                        "SMTP"
                                    ],
                                    "smtps-2456-tcp": [
                                        "2465",
                                        "2465",
                                        "tcp",
                                        "SMTPS"
                                    ],
                                    "smtps-465-tcp": [
                                        "465",
                                        "465",
                                        "tcp",
                                        "SMTPS"
                                    ],
                                    "solr-tcp": [
                                        "8983",
                                        "8987",
                                        "tcp",
                                        "Solr"
                                    ],
                                    "splunk-hec-tcp": [
                                        "8088",
                                        "8088",
                                        "tcp",
                                        "Splunk HEC"
                                    ],
                                    "splunk-indexer-tcp": [
                                        "9997",
                                        "9997",
                                        "tcp",
                                        "Splunk indexer"
                                    ],
                                    "splunk-splunkd-tcp": [
                                        "8089",
                                        "8089",
                                        "tcp",
                                        "Splunkd"
                                    ],
                                    "splunk-web-tcp": [
                                        "8000",
                                        "8000",
                                        "tcp",
                                        "Splunk Web"
                                    ],
                                    "squid-proxy-tcp": [
                                        "3128",
                                        "3128",
                                        "tcp",
                                        "Squid default proxy"
                                    ],
                                    "ssh-tcp": [
                                        "22",
                                        "22",
                                        "tcp",
                                        "SSH"
                                    ],
                                    "storm-nimbus-tcp": [
                                        "6627",
                                        "6627",
                                        "tcp",
                                        "Nimbus"
                                    ],
                                    "storm-supervisor-tcp": [
                                        "6700",
                                        "6703",
                                        "tcp",
                                        "Supervisor"
                                    ],
                                    "storm-ui-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "Storm UI"
                                    ],
                                    "vault-tcp": [
                                        "8200",
                                        "8200",
                                        "tcp",
                                        "Vault"
                                    ],
                                    "wazuh-dashboard": [
                                        "443",
                                        "443",
                                        "tcp",
                                        "Wazuh web user interface"
                                    ],
                                    "wazuh-indexer-restful-api": [
                                        "9200",
                                        "9200",
                                        "tcp",
                                        "Wazuh indexer RESTful API"
                                    ],
                                    "wazuh-server-agent-cluster-daemon": [
                                        "1516",
                                        "1516",
                                        "tcp",
                                        "Wazuh cluster daemon"
                                    ],
                                    "wazuh-server-agent-connection-tcp": [
                                        "1514",
                                        "1514",
                                        "tcp",
                                        "Agent connection service(TCP)"
                                    ],
                                    "wazuh-server-agent-connection-udp": [
                                        "1514",
                                        "1514",
                                        "udp",
                                        "Agent connection service(UDP)"
                                    ],
                                    "wazuh-server-agent-enrollment": [
                                        "1515",
                                        "1515",
                                        "tcp",
                                        "Agent enrollment service"
                                    ],
                                    "wazuh-server-restful-api": [
                                        "55000",
                                        "55000",
                                        "tcp",
                                        "Wazuh server RESTful API"
                                    ],
                                    "wazuh-server-syslog-collector-tcp": [
                                        "514",
                                        "514",
                                        "tcp",
                                        "Wazuh Syslog collector(TCP)"
                                    ],
                                    "wazuh-server-syslog-collector-udp": [
                                        "514",
                                        "514",
                                        "udp",
                                        "Wazuh Syslog collector(UDP)"
                                    ],
                                    "web-jmx-tcp": [
                                        "1099",
                                        "1099",
                                        "tcp",
                                        "JMX"
                                    ],
                                    "winrm-http-tcp": [
                                        "5985",
                                        "5985",
                                        "tcp",
                                        "WinRM HTTP"
                                    ],
                                    "winrm-https-tcp": [
                                        "5986",
                                        "5986",
                                        "tcp",
                                        "WinRM HTTPS"
                                    ],
                                    "zabbix-agent": [
                                        "10050",
                                        "10050",
                                        "tcp",
                                        "Zabbix Agent"
                                    ],
                                    "zabbix-proxy": [
                                        "10051",
                                        "10051",
                                        "tcp",
                                        "Zabbix Proxy"
                                    ],
                                    "zabbix-server": [
                                        "10051",
                                        "10051",
                                        "tcp",
                                        "Zabbix Server"
                                    ],
                                    "zipkin-admin-query-tcp": [
                                        "9901",
                                        "9901",
                                        "tcp",
                                        "Zipkin Admin port query"
                                    ],
                                    "zipkin-admin-tcp": [
                                        "9990",
                                        "9990",
                                        "tcp",
                                        "Zipkin Admin port collector"
                                    ],
                                    "zipkin-admin-web-tcp": [
                                        "9991",
                                        "9991",
                                        "tcp",
                                        "Zipkin Admin port web"
                                    ],
                                    "zipkin-query-tcp": [
                                        "9411",
                                        "9411",
                                        "tcp",
                                        "Zipkin query port"
                                    ],
                                    "zipkin-web-tcp": [
                                        "8080",
                                        "8080",
                                        "tcp",
                                        "Zipkin web port"
                                    ],
                                    "zookeeper-2181-tcp": [
                                        "2181",
                                        "2181",
                                        "tcp",
                                        "Zookeeper"
                                    ],
                                    "zookeeper-2182-tls-tcp": [
                                        "2182",
                                        "2182",
                                        "tcp",
                                        "Zookeeper TLS (MSK specific)"
                                    ],
                                    "zookeeper-2888-tcp": [
                                        "2888",
                                        "2888",
                                        "tcp",
                                        "Zookeeper"
                                    ],
                                    "zookeeper-3888-tcp": [
                                        "3888",
                                        "3888",
                                        "tcp",
                                        "Zookeeper"
                                    ],
                                    "zookeeper-jmx-tcp": [
                                        "7199",
                                        "7199",
                                        "tcp",
                                        "JMX"
                                    ]
                                },
                                "description": "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])"
                            },
                            "security_group_id": {
                                "default": null,
                                "description": "ID of existing security group whose rules we will manage"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to security group"
                            },
                            "use_name_prefix": {
                                "default": true,
                                "description": "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation"
                            },
                            "vpc_id": {
                                "default": null,
                                "description": "ID of the VPC where to create security group"
                            }
                        }
                    },
                    "version_constraint": "~\u003e 5.0"
                },
                "ecs_cluster": {
                    "source": "terraform-aws-modules/ecs/aws//modules/cluster",
                    "expressions": {
                        "autoscaling_capacity_providers": {
                            "references": [
                                "local.name",
                                "module.autoscaling.autoscaling_group_arn",
                                "module.autoscaling"
                            ]
                        },
                        "cluster_name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "cluster_service_connect_defaults": {
                            "references": [
                                "aws_service_discovery_private_dns_namespace.this.arn",
                                "aws_service_discovery_private_dns_namespace.this"
                            ]
                        },
                        "default_capacity_provider_use_fargate": {
                            "constant_value": false
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "arn": {
                                "expression": {
                                    "references": [
                                        "aws_ecs_cluster.this[0].arn",
                                        "aws_ecs_cluster.this[0]",
                                        "aws_ecs_cluster.this"
                                    ]
                                },
                                "description": "ARN that identifies the cluster"
                            },
                            "autoscaling_capacity_providers": {
                                "expression": {
                                    "references": [
                                        "aws_ecs_capacity_provider.this"
                                    ]
                                },
                                "description": "Map of autoscaling capacity providers created and their attributes"
                            },
                            "cloudwatch_log_group_arn": {
                                "expression": {
                                    "references": [
                                        "aws_cloudwatch_log_group.this[0].arn",
                                        "aws_cloudwatch_log_group.this[0]",
                                        "aws_cloudwatch_log_group.this"
                                    ]
                                },
                                "description": "Arn of cloudwatch log group created"
                            },
                            "cloudwatch_log_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_cloudwatch_log_group.this[0].name",
                                        "aws_cloudwatch_log_group.this[0]",
                                        "aws_cloudwatch_log_group.this"
                                    ]
                                },
                                "description": "Name of cloudwatch log group created"
                            },
                            "cluster_capacity_providers": {
                                "expression": {
                                    "references": [
                                        "aws_ecs_cluster_capacity_providers.this"
                                    ]
                                },
                                "description": "Map of cluster capacity providers attributes"
                            },
                            "id": {
                                "expression": {
                                    "references": [
                                        "aws_ecs_cluster.this[0].id",
                                        "aws_ecs_cluster.this[0]",
                                        "aws_ecs_cluster.this"
                                    ]
                                },
                                "description": "ID that identifies the cluster"
                            },
                            "name": {
                                "expression": {
                                    "references": [
                                        "aws_ecs_cluster.this[0].name",
                                        "aws_ecs_cluster.this[0]",
                                        "aws_ecs_cluster.this"
                                    ]
                                },
                                "description": "Name that identifies the cluster"
                            },
                            "task_exec_iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.task_exec[0].arn",
                                        "aws_iam_role.task_exec[0]",
                                        "aws_iam_role.task_exec"
                                    ]
                                },
                                "description": "Task execution IAM role ARN"
                            },
                            "task_exec_iam_role_name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.task_exec[0].name",
                                        "aws_iam_role.task_exec[0]",
                                        "aws_iam_role.task_exec"
                                    ]
                                },
                                "description": "Task execution IAM role name"
                            },
                            "task_exec_iam_role_unique_id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.task_exec[0].unique_id",
                                        "aws_iam_role.task_exec[0]",
                                        "aws_iam_role.task_exec"
                                    ]
                                },
                                "description": "Stable and unique string identifying the task execution IAM role"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_cloudwatch_log_group.this",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "kms_key_id": {
                                        "references": [
                                            "var.cloudwatch_log_group_kms_key_id"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    },
                                    "retention_in_days": {
                                        "references": [
                                            "var.cloudwatch_log_group_retention_in_days"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.cloudwatch_log_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_ecs_capacity_provider.this",
                                "mode": "managed",
                                "type": "aws_ecs_capacity_provider",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "auto_scaling_group_provider": [
                                        {
                                            "auto_scaling_group_arn": {
                                                "references": [
                                                    "each.value.auto_scaling_group_arn",
                                                    "each.value"
                                                ]
                                            },
                                            "managed_termination_protection": {
                                                "references": [
                                                    "each.value.managed_scaling",
                                                    "each.value",
                                                    "each.value.managed_termination_protection",
                                                    "each.value"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": {
                                        "references": [
                                            "each.value.name",
                                            "each.value",
                                            "each.key"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "each.value.tags",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.autoscaling_capacity_providers",
                                        "var.create"
                                    ]
                                }
                            },
                            {
                                "address": "aws_ecs_cluster.this",
                                "mode": "managed",
                                "type": "aws_ecs_cluster",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create"
                                    ]
                                }
                            },
                            {
                                "address": "aws_ecs_cluster_capacity_providers.this",
                                "mode": "managed",
                                "type": "aws_ecs_cluster_capacity_providers",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "capacity_providers": {
                                        "references": [
                                            "var.fargate_capacity_providers",
                                            "var.autoscaling_capacity_providers"
                                        ]
                                    },
                                    "cluster_name": {
                                        "references": [
                                            "aws_ecs_cluster.this[0].name",
                                            "aws_ecs_cluster.this[0]",
                                            "aws_ecs_cluster.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.fargate_capacity_providers",
                                        "var.autoscaling_capacity_providers"
                                    ]
                                },
                                "depends_on": [
                                    "aws_ecs_capacity_provider.this"
                                ]
                            },
                            {
                                "address": "aws_iam_policy.task_exec",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "task_exec",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.task_exec_iam_role_description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.task_exec_iam_role_use_name_prefix",
                                            "local.task_exec_iam_role_name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.task_exec_iam_role_use_name_prefix",
                                            "local.task_exec_iam_role_name"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.task_exec[0].json",
                                            "data.aws_iam_policy_document.task_exec[0]",
                                            "data.aws_iam_policy_document.task_exec"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.task_exec_iam_role_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_task_exec_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.task_exec",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "task_exec",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.task_exec_assume[0].json",
                                            "data.aws_iam_policy_document.task_exec_assume[0]",
                                            "data.aws_iam_policy_document.task_exec_assume"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.task_exec_iam_role_description",
                                            "var.cluster_name"
                                        ]
                                    },
                                    "force_detach_policies": {
                                        "constant_value": true
                                    },
                                    "name": {
                                        "references": [
                                            "var.task_exec_iam_role_use_name_prefix",
                                            "local.task_exec_iam_role_name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.task_exec_iam_role_use_name_prefix",
                                            "local.task_exec_iam_role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.task_exec_iam_role_path"
                                        ]
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.task_exec_iam_role_permissions_boundary"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.task_exec_iam_role_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_task_exec_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.task_exec",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "task_exec",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.task_exec[0].arn",
                                            "aws_iam_policy.task_exec[0]",
                                            "aws_iam_policy.task_exec"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.task_exec[0].name",
                                            "aws_iam_role.task_exec[0]",
                                            "aws_iam_role.task_exec"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_task_exec_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.task_exec_additional",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "task_exec_additional",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.task_exec[0].name",
                                            "aws_iam_role.task_exec[0]",
                                            "aws_iam_role.task_exec"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.task_exec_iam_role_policies",
                                        "local.create_task_exec_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.task_exec",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "task_exec",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "logs:CreateLogStream",
                                                    "logs:PutLogEvents"
                                                ]
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "Logs"
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "ecr:GetAuthorizationToken",
                                                    "ecr:BatchCheckLayerAvailability",
                                                    "ecr:GetDownloadUrlForLayer",
                                                    "ecr:BatchGetImage"
                                                ]
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "ECR"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_task_exec_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.task_exec_assume",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "task_exec_assume",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRole"
                                                ]
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "ecs-tasks.amazonaws.com"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ],
                                            "sid": {
                                                "constant_value": "ECSTaskExecutionAssumeRole"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_task_exec_iam_role"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "autoscaling_capacity_providers": {
                                "default": {},
                                "description": "Map of autoscaling capacity provider definitions to create for the cluster"
                            },
                            "cloudwatch_log_group_kms_key_id": {
                                "default": null,
                                "description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)"
                            },
                            "cloudwatch_log_group_retention_in_days": {
                                "default": 90,
                                "description": "Number of days to retain log events"
                            },
                            "cloudwatch_log_group_tags": {
                                "default": {},
                                "description": "A map of additional tags to add to the log group created"
                            },
                            "cluster_configuration": {
                                "default": {},
                                "description": "The execute command configuration for the cluster"
                            },
                            "cluster_name": {
                                "default": "",
                                "description": "Name of the cluster (up to 255 letters, numbers, hyphens, and underscores)"
                            },
                            "cluster_service_connect_defaults": {
                                "default": {},
                                "description": "Configures a default Service Connect namespace"
                            },
                            "cluster_settings": {
                                "default": {
                                    "name": "containerInsights",
                                    "value": "enabled"
                                },
                                "description": "Configuration block(s) with cluster settings. For example, this can be used to enable CloudWatch Container Insights for a cluster"
                            },
                            "create": {
                                "default": true,
                                "description": "Determines whether resources will be created (affects all resources)"
                            },
                            "create_cloudwatch_log_group": {
                                "default": true,
                                "description": "Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled"
                            },
                            "create_task_exec_iam_role": {
                                "default": false,
                                "description": "Determines whether the ECS task definition IAM role should be created"
                            },
                            "create_task_exec_policy": {
                                "default": true,
                                "description": "Determines whether the ECS task definition IAM policy should be created. This includes permissions included in AmazonECSTaskExecutionRolePolicy as well as access to secrets and SSM parameters"
                            },
                            "default_capacity_provider_use_fargate": {
                                "default": true,
                                "description": "Determines whether to use Fargate or autoscaling for default capacity provider strategy"
                            },
                            "fargate_capacity_providers": {
                                "default": {},
                                "description": "Map of Fargate capacity provider definitions to use for the cluster"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources"
                            },
                            "task_exec_iam_role_description": {
                                "default": null,
                                "description": "Description of the role"
                            },
                            "task_exec_iam_role_name": {
                                "default": null,
                                "description": "Name to use on IAM role created"
                            },
                            "task_exec_iam_role_path": {
                                "default": null,
                                "description": "IAM role path"
                            },
                            "task_exec_iam_role_permissions_boundary": {
                                "default": null,
                                "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                            },
                            "task_exec_iam_role_policies": {
                                "default": {},
                                "description": "Map of IAM role policy ARNs to attach to the IAM role"
                            },
                            "task_exec_iam_role_tags": {
                                "default": {},
                                "description": "A map of additional tags to add to the IAM role created"
                            },
                            "task_exec_iam_role_use_name_prefix": {
                                "default": true,
                                "description": "Determines whether the IAM role name (`task_exec_iam_role_name`) is used as a prefix"
                            },
                            "task_exec_iam_statements": {
                                "default": {},
                                "description": "A map of IAM policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) for custom permission usage"
                            },
                            "task_exec_secret_arns": {
                                "default": [
                                    "arn:aws:secretsmanager:*:*:secret:*"
                                ],
                                "description": "List of SecretsManager secret ARNs the task execution role will be permitted to get/read"
                            },
                            "task_exec_ssm_param_arns": {
                                "default": [
                                    "arn:aws:ssm:*:*:parameter/*"
                                ],
                                "description": "List of SSM parameter ARNs the task execution role will be permitted to get/read"
                            }
                        }
                    },
                    "version_constraint": "~\u003e 5.6"
                },
                "vpc": {
                    "source": "terraform-aws-modules/vpc/aws",
                    "expressions": {
                        "azs": {
                            "references": [
                                "local.azs"
                            ]
                        },
                        "cidr": {
                            "references": [
                                "local.vpc_cidr"
                            ]
                        },
                        "default_network_acl_tags": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "default_route_table_tags": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "default_security_group_tags": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "enable_nat_gateway": {
                            "constant_value": true
                        },
                        "manage_default_network_acl": {
                            "constant_value": true
                        },
                        "manage_default_route_table": {
                            "constant_value": true
                        },
                        "manage_default_security_group": {
                            "constant_value": true
                        },
                        "name": {
                            "references": [
                                "local.name"
                            ]
                        },
                        "private_subnets": {
                            "references": [
                                "local.azs",
                                "local.vpc_cidr"
                            ]
                        },
                        "public_subnets": {
                            "references": [
                                "local.azs",
                                "local.vpc_cidr"
                            ]
                        },
                        "single_nat_gateway": {
                            "constant_value": true
                        },
                        "tags": {
                            "references": [
                                "local.tags"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "azs": {
                                "expression": {
                                    "references": [
                                        "var.azs"
                                    ]
                                },
                                "description": "A list of availability zones specified as argument to this module"
                            },
                            "cgw_arns": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "List of ARNs of Customer Gateway"
                            },
                            "cgw_ids": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "List of IDs of Customer Gateway"
                            },
                            "database_internet_gateway_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_internet_gateway[0].id",
                                        "aws_route.database_internet_gateway[0]",
                                        "aws_route.database_internet_gateway"
                                    ]
                                },
                                "description": "ID of the database internet gateway route"
                            },
                            "database_ipv6_egress_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_ipv6_egress[0].id",
                                        "aws_route.database_ipv6_egress[0]",
                                        "aws_route.database_ipv6_egress"
                                    ]
                                },
                                "description": "ID of the database IPv6 egress route"
                            },
                            "database_nat_gateway_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_nat_gateway"
                                    ]
                                },
                                "description": "List of IDs of the database nat gateway route"
                            },
                            "database_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.database[0].arn",
                                        "aws_network_acl.database[0]",
                                        "aws_network_acl.database"
                                    ]
                                },
                                "description": "ARN of the database network ACL"
                            },
                            "database_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.database[0].id",
                                        "aws_network_acl.database[0]",
                                        "aws_network_acl.database"
                                    ]
                                },
                                "description": "ID of the database network ACL"
                            },
                            "database_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.database"
                                    ]
                                },
                                "description": "List of IDs of the database route table association"
                            },
                            "database_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.database",
                                        "aws_route_table.database",
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of database route tables"
                            },
                            "database_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of ARNs of database subnets"
                            },
                            "database_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_db_subnet_group.database[0].id",
                                        "aws_db_subnet_group.database[0]",
                                        "aws_db_subnet_group.database"
                                    ]
                                },
                                "description": "ID of database subnet group"
                            },
                            "database_subnet_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_db_subnet_group.database[0].name",
                                        "aws_db_subnet_group.database[0]",
                                        "aws_db_subnet_group.database"
                                    ]
                                },
                                "description": "Name of database subnet group"
                            },
                            "database_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of IDs of database subnets"
                            },
                            "database_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of cidr_blocks of database subnets"
                            },
                            "database_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
                            },
                            "default_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].default_network_acl_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default network ACL"
                            },
                            "default_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].default_route_table_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default route table"
                            },
                            "default_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].default_security_group_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the security group created by default on VPC creation"
                            },
                            "default_vpc_arn": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].arn",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ARN of the Default VPC"
                            },
                            "default_vpc_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].cidr_block",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The CIDR block of the Default VPC"
                            },
                            "default_vpc_default_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].default_network_acl_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default network ACL of the Default VPC"
                            },
                            "default_vpc_default_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].default_route_table_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default route table of the Default VPC"
                            },
                            "default_vpc_default_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].default_security_group_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the security group created by default on Default VPC creation"
                            },
                            "default_vpc_enable_dns_hostnames": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].enable_dns_hostnames",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the Default VPC has DNS hostname support"
                            },
                            "default_vpc_enable_dns_support": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].enable_dns_support",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the Default VPC has DNS support"
                            },
                            "default_vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the Default VPC"
                            },
                            "default_vpc_instance_tenancy": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].instance_tenancy",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Tenancy of instances spin up within Default VPC"
                            },
                            "default_vpc_main_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this[0].main_route_table_id",
                                        "aws_default_vpc.this[0]",
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the main route table associated with the Default VPC"
                            },
                            "dhcp_options_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_dhcp_options.this[0].id",
                                        "aws_vpc_dhcp_options.this[0]",
                                        "aws_vpc_dhcp_options.this"
                                    ]
                                },
                                "description": "The ID of the DHCP options"
                            },
                            "egress_only_internet_gateway_id": {
                                "expression": {
                                    "references": [
                                        "aws_egress_only_internet_gateway.this[0].id",
                                        "aws_egress_only_internet_gateway.this[0]",
                                        "aws_egress_only_internet_gateway.this"
                                    ]
                                },
                                "description": "The ID of the egress only Internet Gateway"
                            },
                            "elasticache_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.elasticache[0].arn",
                                        "aws_network_acl.elasticache[0]",
                                        "aws_network_acl.elasticache"
                                    ]
                                },
                                "description": "ARN of the elasticache network ACL"
                            },
                            "elasticache_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.elasticache[0].id",
                                        "aws_network_acl.elasticache[0]",
                                        "aws_network_acl.elasticache"
                                    ]
                                },
                                "description": "ID of the elasticache network ACL"
                            },
                            "elasticache_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.elasticache"
                                    ]
                                },
                                "description": "List of IDs of the elasticache route table association"
                            },
                            "elasticache_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.elasticache",
                                        "local.private_route_table_ids"
                                    ]
                                },
                                "description": "List of IDs of elasticache route tables"
                            },
                            "elasticache_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of ARNs of elasticache subnets"
                            },
                            "elasticache_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_elasticache_subnet_group.elasticache[0].id",
                                        "aws_elasticache_subnet_group.elasticache[0]",
                                        "aws_elasticache_subnet_group.elasticache"
                                    ]
                                },
                                "description": "ID of elasticache subnet group"
                            },
                            "elasticache_subnet_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_elasticache_subnet_group.elasticache[0].name",
                                        "aws_elasticache_subnet_group.elasticache[0]",
                                        "aws_elasticache_subnet_group.elasticache"
                                    ]
                                },
                                "description": "Name of elasticache subnet group"
                            },
                            "elasticache_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of IDs of elasticache subnets"
                            },
                            "elasticache_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of cidr_blocks of elasticache subnets"
                            },
                            "elasticache_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
                            },
                            "igw_arn": {
                                "expression": {
                                    "references": [
                                        "aws_internet_gateway.this[0].arn",
                                        "aws_internet_gateway.this[0]",
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                "description": "The ARN of the Internet Gateway"
                            },
                            "igw_id": {
                                "expression": {
                                    "references": [
                                        "aws_internet_gateway.this[0].id",
                                        "aws_internet_gateway.this[0]",
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                "description": "The ID of the Internet Gateway"
                            },
                            "intra_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.intra[0].arn",
                                        "aws_network_acl.intra[0]",
                                        "aws_network_acl.intra"
                                    ]
                                },
                                "description": "ARN of the intra network ACL"
                            },
                            "intra_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.intra[0].id",
                                        "aws_network_acl.intra[0]",
                                        "aws_network_acl.intra"
                                    ]
                                },
                                "description": "ID of the intra network ACL"
                            },
                            "intra_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.intra"
                                    ]
                                },
                                "description": "List of IDs of the intra route table association"
                            },
                            "intra_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.intra"
                                    ]
                                },
                                "description": "List of IDs of intra route tables"
                            },
                            "intra_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of ARNs of intra subnets"
                            },
                            "intra_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of IDs of intra subnets"
                            },
                            "intra_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of cidr_blocks of intra subnets"
                            },
                            "intra_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
                            },
                            "name": {
                                "expression": {
                                    "references": [
                                        "var.name"
                                    ]
                                },
                                "description": "The name of the VPC specified as argument to this module"
                            },
                            "nat_ids": {
                                "expression": {
                                    "references": [
                                        "aws_eip.nat"
                                    ]
                                },
                                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
                            },
                            "nat_public_ips": {
                                "expression": {
                                    "references": [
                                        "var.reuse_nat_ips",
                                        "var.external_nat_ips",
                                        "aws_eip.nat"
                                    ]
                                },
                                "description": "List of public Elastic IPs created for AWS NAT Gateway"
                            },
                            "natgw_ids": {
                                "expression": {
                                    "references": [
                                        "aws_nat_gateway.this"
                                    ]
                                },
                                "description": "List of NAT Gateway IDs"
                            },
                            "natgw_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_nat_gateway.this"
                                    ]
                                },
                                "description": "List of Network Interface IDs assigned to NAT Gateways"
                            },
                            "outpost_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.outpost[0].arn",
                                        "aws_network_acl.outpost[0]",
                                        "aws_network_acl.outpost"
                                    ]
                                },
                                "description": "ARN of the outpost network ACL"
                            },
                            "outpost_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.outpost[0].id",
                                        "aws_network_acl.outpost[0]",
                                        "aws_network_acl.outpost"
                                    ]
                                },
                                "description": "ID of the outpost network ACL"
                            },
                            "outpost_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of ARNs of outpost subnets"
                            },
                            "outpost_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of IDs of outpost subnets"
                            },
                            "outpost_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of cidr_blocks of outpost subnets"
                            },
                            "outpost_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
                            },
                            "private_ipv6_egress_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.private_ipv6_egress"
                                    ]
                                },
                                "description": "List of IDs of the ipv6 egress route"
                            },
                            "private_nat_gateway_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.private_nat_gateway"
                                    ]
                                },
                                "description": "List of IDs of the private nat gateway route"
                            },
                            "private_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.private[0].arn",
                                        "aws_network_acl.private[0]",
                                        "aws_network_acl.private"
                                    ]
                                },
                                "description": "ARN of the private network ACL"
                            },
                            "private_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.private[0].id",
                                        "aws_network_acl.private[0]",
                                        "aws_network_acl.private"
                                    ]
                                },
                                "description": "ID of the private network ACL"
                            },
                            "private_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.private"
                                    ]
                                },
                                "description": "List of IDs of the private route table association"
                            },
                            "private_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "local.private_route_table_ids"
                                    ]
                                },
                                "description": "List of IDs of private route tables"
                            },
                            "private_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of ARNs of private subnets"
                            },
                            "private_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of IDs of private subnets"
                            },
                            "private_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of cidr_blocks of private subnets"
                            },
                            "private_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
                            },
                            "public_internet_gateway_ipv6_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.public_internet_gateway_ipv6[0].id",
                                        "aws_route.public_internet_gateway_ipv6[0]",
                                        "aws_route.public_internet_gateway_ipv6"
                                    ]
                                },
                                "description": "ID of the IPv6 internet gateway route"
                            },
                            "public_internet_gateway_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.public_internet_gateway[0].id",
                                        "aws_route.public_internet_gateway[0]",
                                        "aws_route.public_internet_gateway"
                                    ]
                                },
                                "description": "ID of the internet gateway route"
                            },
                            "public_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.public[0].arn",
                                        "aws_network_acl.public[0]",
                                        "aws_network_acl.public"
                                    ]
                                },
                                "description": "ARN of the public network ACL"
                            },
                            "public_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.public[0].id",
                                        "aws_network_acl.public[0]",
                                        "aws_network_acl.public"
                                    ]
                                },
                                "description": "ID of the public network ACL"
                            },
                            "public_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.public"
                                    ]
                                },
                                "description": "List of IDs of the public route table association"
                            },
                            "public_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "local.public_route_table_ids"
                                    ]
                                },
                                "description": "List of IDs of public route tables"
                            },
                            "public_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of ARNs of public subnets"
                            },
                            "public_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of IDs of public subnets"
                            },
                            "public_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of cidr_blocks of public subnets"
                            },
                            "public_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
                            },
                            "redshift_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.redshift[0].arn",
                                        "aws_network_acl.redshift[0]",
                                        "aws_network_acl.redshift"
                                    ]
                                },
                                "description": "ARN of the redshift network ACL"
                            },
                            "redshift_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.redshift[0].id",
                                        "aws_network_acl.redshift[0]",
                                        "aws_network_acl.redshift"
                                    ]
                                },
                                "description": "ID of the redshift network ACL"
                            },
                            "redshift_public_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.redshift_public"
                                    ]
                                },
                                "description": "List of IDs of the public redshift route table association"
                            },
                            "redshift_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.redshift"
                                    ]
                                },
                                "description": "List of IDs of the redshift route table association"
                            },
                            "redshift_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "local.redshift_route_table_ids",
                                        "local.redshift_route_table_ids",
                                        "var.enable_public_redshift",
                                        "local.public_route_table_ids",
                                        "local.private_route_table_ids"
                                    ]
                                },
                                "description": "List of IDs of redshift route tables"
                            },
                            "redshift_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of ARNs of redshift subnets"
                            },
                            "redshift_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_redshift_subnet_group.redshift[0].id",
                                        "aws_redshift_subnet_group.redshift[0]",
                                        "aws_redshift_subnet_group.redshift"
                                    ]
                                },
                                "description": "ID of redshift subnet group"
                            },
                            "redshift_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of IDs of redshift subnets"
                            },
                            "redshift_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of cidr_blocks of redshift subnets"
                            },
                            "redshift_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
                            },
                            "this_customer_gateway": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "Map of Customer Gateway attributes"
                            },
                            "vgw_arn": {
                                "expression": {
                                    "references": [
                                        "aws_vpn_gateway.this[0].arn",
                                        "aws_vpn_gateway.this[0]",
                                        "aws_vpn_gateway.this"
                                    ]
                                },
                                "description": "The ARN of the VPN Gateway"
                            },
                            "vgw_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpn_gateway.this[0].id",
                                        "aws_vpn_gateway.this[0]",
                                        "aws_vpn_gateway.this",
                                        "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                                        "aws_vpn_gateway_attachment.this[0]",
                                        "aws_vpn_gateway_attachment.this"
                                    ]
                                },
                                "description": "The ID of the VPN Gateway"
                            },
                            "vpc_arn": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].arn",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ARN of the VPC"
                            },
                            "vpc_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].cidr_block",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The CIDR block of the VPC"
                            },
                            "vpc_enable_dns_hostnames": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].enable_dns_hostnames",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the VPC has DNS hostname support"
                            },
                            "vpc_enable_dns_support": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].enable_dns_support",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the VPC has DNS support"
                            },
                            "vpc_flow_log_cloudwatch_iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "local.flow_log_iam_role_arn"
                                    ]
                                },
                                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                            },
                            "vpc_flow_log_deliver_cross_account_role": {
                                "expression": {
                                    "references": [
                                        "aws_flow_log.this[0].deliver_cross_account_role",
                                        "aws_flow_log.this[0]",
                                        "aws_flow_log.this"
                                    ]
                                },
                                "description": "The ARN of the IAM role used when pushing logs cross account"
                            },
                            "vpc_flow_log_destination_arn": {
                                "expression": {
                                    "references": [
                                        "local.flow_log_destination_arn"
                                    ]
                                },
                                "description": "The ARN of the destination for VPC Flow Logs"
                            },
                            "vpc_flow_log_destination_type": {
                                "expression": {
                                    "references": [
                                        "var.flow_log_destination_type"
                                    ]
                                },
                                "description": "The type of the destination for VPC Flow Logs"
                            },
                            "vpc_flow_log_id": {
                                "expression": {
                                    "references": [
                                        "aws_flow_log.this[0].id",
                                        "aws_flow_log.this[0]",
                                        "aws_flow_log.this"
                                    ]
                                },
                                "description": "The ID of the Flow Log resource"
                            },
                            "vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the VPC"
                            },
                            "vpc_instance_tenancy": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].instance_tenancy",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Tenancy of instances spin up within VPC"
                            },
                            "vpc_ipv6_association_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].ipv6_association_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The association ID for the IPv6 CIDR block"
                            },
                            "vpc_ipv6_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].ipv6_cidr_block",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The IPv6 CIDR block"
                            },
                            "vpc_main_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].main_route_table_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the main route table associated with this VPC"
                            },
                            "vpc_owner_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this[0].owner_id",
                                        "aws_vpc.this[0]",
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the AWS account that owns the VPC"
                            },
                            "vpc_secondary_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_ipv4_cidr_block_association.this"
                                    ]
                                },
                                "description": "List of secondary CIDR blocks of the VPC"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_cloudwatch_log_group.flow_log",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "flow_log",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "kms_key_id": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_kms_key_id"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_name_prefix",
                                            "local.flow_log_cloudwatch_log_group_name_suffix"
                                        ]
                                    },
                                    "retention_in_days": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_retention_in_days"
                                        ]
                                    },
                                    "skip_destroy": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_skip_destroy"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_customer_gateway.this",
                                "mode": "managed",
                                "type": "aws_customer_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bgp_asn": {
                                        "references": [
                                            "each.value[\"bgp_asn\"]",
                                            "each.value"
                                        ]
                                    },
                                    "device_name": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "ip_address": {
                                        "references": [
                                            "each.value[\"ip_address\"]",
                                            "each.value"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "each.key",
                                            "var.tags",
                                            "var.customer_gateway_tags"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ipsec.1"
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.customer_gateways"
                                    ]
                                }
                            },
                            {
                                "address": "aws_db_subnet_group.database",
                                "mode": "managed",
                                "type": "aws_db_subnet_group",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.database_subnet_group_name",
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.database_subnet_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.database_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_subnets",
                                        "var.create_database_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_network_acl.this",
                                "mode": "managed",
                                "type": "aws_default_network_acl",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "default_network_acl_id": {
                                        "references": [
                                            "aws_vpc.this[0].default_network_acl_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "constant_value": null
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_network_acl_name",
                                            "var.name",
                                            "var.tags",
                                            "var.default_network_acl_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.manage_default_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_route_table.default",
                                "mode": "managed",
                                "type": "aws_default_route_table",
                                "name": "default",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "default_route_table_id": {
                                        "references": [
                                            "aws_vpc.this[0].default_route_table_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "propagating_vgws": {
                                        "references": [
                                            "var.default_route_table_propagating_vgws"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_route_table_name",
                                            "var.name",
                                            "var.tags",
                                            "var.default_route_table_tags"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        },
                                        "update": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.manage_default_route_table"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_security_group.this",
                                "mode": "managed",
                                "type": "aws_default_security_group",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.default_security_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.default_security_group_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this[0].id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.manage_default_security_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_vpc.this",
                                "mode": "managed",
                                "type": "aws_default_vpc",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "enable_dns_hostnames": {
                                        "references": [
                                            "var.default_vpc_enable_dns_hostnames"
                                        ]
                                    },
                                    "enable_dns_support": {
                                        "references": [
                                            "var.default_vpc_enable_dns_support"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_vpc_name",
                                            "var.tags",
                                            "var.default_vpc_tags"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.manage_default_vpc"
                                    ]
                                }
                            },
                            {
                                "address": "aws_egress_only_internet_gateway.this",
                                "mode": "managed",
                                "type": "aws_egress_only_internet_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.igw_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "local.max_subnet_length"
                                    ]
                                }
                            },
                            {
                                "address": "aws_eip.nat",
                                "mode": "managed",
                                "type": "aws_eip",
                                "name": "nat",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "domain": {
                                        "constant_value": "vpc"
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.azs",
                                            "var.single_nat_gateway",
                                            "count.index",
                                            "var.tags",
                                            "var.nat_eip_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_nat_gateway",
                                        "var.reuse_nat_ips",
                                        "local.nat_gateway_count"
                                    ]
                                },
                                "depends_on": [
                                    "aws_internet_gateway.this"
                                ]
                            },
                            {
                                "address": "aws_elasticache_subnet_group.elasticache",
                                "mode": "managed",
                                "type": "aws_elasticache_subnet_group",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.elasticache_subnet_group_name",
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.elasticache_subnet_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.elasticache_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_elasticache_subnets",
                                        "var.create_elasticache_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_flow_log.this",
                                "mode": "managed",
                                "type": "aws_flow_log",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "deliver_cross_account_role": {
                                        "references": [
                                            "var.flow_log_deliver_cross_account_role"
                                        ]
                                    },
                                    "iam_role_arn": {
                                        "references": [
                                            "local.flow_log_iam_role_arn"
                                        ]
                                    },
                                    "log_destination": {
                                        "references": [
                                            "local.flow_log_destination_arn"
                                        ]
                                    },
                                    "log_destination_type": {
                                        "references": [
                                            "var.flow_log_destination_type"
                                        ]
                                    },
                                    "log_format": {
                                        "references": [
                                            "var.flow_log_log_format"
                                        ]
                                    },
                                    "max_aggregation_interval": {
                                        "references": [
                                            "var.flow_log_max_aggregation_interval"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    },
                                    "traffic_type": {
                                        "references": [
                                            "var.flow_log_traffic_type"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.enable_flow_log"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name_prefix": {
                                        "constant_value": "vpc-flow-log-to-cloudwatch-"
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                                        ]
                                    },
                                    "name_prefix": {
                                        "constant_value": "vpc-flow-log-role-"
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.vpc_flow_log_permissions_boundary"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                                            "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                                            "aws_iam_policy.vpc_flow_log_cloudwatch"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                                            "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                                            "aws_iam_role.vpc_flow_log_cloudwatch"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_internet_gateway.this",
                                "mode": "managed",
                                "type": "aws_internet_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.igw_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "var.create_igw"
                                    ]
                                }
                            },
                            {
                                "address": "aws_nat_gateway.this",
                                "mode": "managed",
                                "type": "aws_nat_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "allocation_id": {
                                        "references": [
                                            "local.nat_gateway_ips",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.public",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.azs",
                                            "var.single_nat_gateway",
                                            "count.index",
                                            "var.tags",
                                            "var.nat_gateway_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_nat_gateway",
                                        "local.nat_gateway_count"
                                    ]
                                },
                                "depends_on": [
                                    "aws_internet_gateway.this"
                                ]
                            },
                            {
                                "address": "aws_network_acl.database",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.tags",
                                            "var.database_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.elasticache",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.elasticache_subnet_suffix",
                                            "var.tags",
                                            "var.elasticache_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_elasticache_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.intra",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.intra"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.intra_subnet_suffix",
                                            "var.tags",
                                            "var.intra_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_intra_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.outpost",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.outpost"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.outpost_subnet_suffix",
                                            "var.tags",
                                            "var.outpost_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_outpost_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.private",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.tags",
                                            "var.private_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_private_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.public",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.public"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.public_subnet_suffix",
                                            "var.tags",
                                            "var.public_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "var.public_dedicated_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.redshift",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.redshift_subnet_suffix",
                                            "var.tags",
                                            "var.redshift_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.database_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "database_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.database[0].id",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_network_acl",
                                        "var.database_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.database_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "database_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.database[0].id",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_network_acl",
                                        "var.database_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.elasticache_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "elasticache_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].id",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_elasticache_network_acl",
                                        "var.elasticache_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.elasticache_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "elasticache_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].id",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_elasticache_network_acl",
                                        "var.elasticache_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.intra_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "intra_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.intra[0].id",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_intra_network_acl",
                                        "var.intra_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.intra_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "intra_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.intra[0].id",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_intra_network_acl",
                                        "var.intra_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.outpost_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "outpost_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.outpost[0].id",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_outpost_network_acl",
                                        "var.outpost_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.outpost_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "outpost_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.outpost[0].id",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_outpost_network_acl",
                                        "var.outpost_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.private_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "private_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.private[0].id",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_private_network_acl",
                                        "var.private_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.private_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "private_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.private[0].id",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_private_network_acl",
                                        "var.private_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.public_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "public_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.public[0].id",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "var.public_dedicated_network_acl",
                                        "var.public_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.public_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "public_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.public[0].id",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "var.public_dedicated_network_acl",
                                        "var.public_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.redshift_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "redshift_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.redshift[0].id",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_network_acl",
                                        "var.redshift_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.redshift_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "redshift_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.redshift[0].id",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_network_acl",
                                        "var.redshift_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_redshift_subnet_group.redshift",
                                "mode": "managed",
                                "type": "aws_redshift_subnet_group",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.redshift_subnet_group_name",
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.redshift_subnet_group_name",
                                            "var.name",
                                            "var.tags",
                                            "var.redshift_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_subnets",
                                        "var.create_redshift_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_dns64_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_dns64_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "64:ff9b::/96"
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_route_table",
                                        "var.create_database_internet_gateway_route",
                                        "var.create_database_nat_gateway_route",
                                        "var.enable_nat_gateway",
                                        "var.enable_ipv6",
                                        "var.private_subnet_enable_dns64",
                                        "var.single_nat_gateway",
                                        "local.len_database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_internet_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_internet_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database[0].id",
                                            "aws_route_table.database[0]",
                                            "aws_route_table.database"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_route_table",
                                        "var.create_igw",
                                        "var.create_database_internet_gateway_route",
                                        "var.create_database_nat_gateway_route"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_ipv6_egress",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_ipv6_egress",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "egress_only_gateway_id": {
                                        "references": [
                                            "aws_egress_only_internet_gateway.this[0].id",
                                            "aws_egress_only_internet_gateway.this[0]",
                                            "aws_egress_only_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database[0].id",
                                            "aws_route_table.database[0]",
                                            "aws_route_table.database"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_route_table",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "var.create_database_internet_gateway_route"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_route_table",
                                        "var.create_database_internet_gateway_route",
                                        "var.create_database_nat_gateway_route",
                                        "var.enable_nat_gateway",
                                        "var.single_nat_gateway",
                                        "local.len_database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.private_dns64_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_dns64_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "64:ff9b::/96"
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_nat_gateway",
                                        "var.enable_ipv6",
                                        "var.private_subnet_enable_dns64",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.private_ipv6_egress",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_ipv6_egress",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "egress_only_gateway_id": {
                                        "references": [
                                            "aws_egress_only_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "local.len_private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.private_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "references": [
                                            "var.nat_gateway_destination_cidr_block"
                                        ]
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_nat_gateway",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.public_internet_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "public_internet_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "var.create_igw"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.public_internet_gateway_ipv6",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "public_internet_gateway_ipv6",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "var.create_igw",
                                        "var.enable_ipv6"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.database",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.single_nat_gateway",
                                            "var.create_database_internet_gateway_route",
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.database_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_route_table",
                                        "var.single_nat_gateway",
                                        "var.create_database_internet_gateway_route",
                                        "local.len_database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.elasticache",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.elasticache_subnet_suffix",
                                            "var.tags",
                                            "var.elasticache_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_elasticache_route_table"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.intra",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.intra_subnet_suffix",
                                            "var.tags",
                                            "var.intra_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.private",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.single_nat_gateway",
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.private_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_private_subnets",
                                        "local.max_subnet_length",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.public",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.public_subnet_suffix",
                                            "var.tags",
                                            "var.public_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.redshift",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.redshift_subnet_suffix",
                                            "var.tags",
                                            "var.redshift_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_route_table"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.database",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database",
                                            "aws_route_table.private",
                                            "var.create_database_subnet_route_table",
                                            "var.single_nat_gateway",
                                            "var.create_database_internet_gateway_route",
                                            "count.index",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.database",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_subnets",
                                        "local.len_database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.elasticache",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.elasticache",
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "var.create_elasticache_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.elasticache",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_elasticache_subnets",
                                        "local.len_elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.intra",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.intra",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_intra_subnets",
                                        "local.len_intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.outpost",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.outpost",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_outpost_subnets",
                                        "local.len_outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.private",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.private",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_private_subnets",
                                        "local.len_private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.public",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.public",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "local.len_public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.redshift",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.redshift",
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "var.create_redshift_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.redshift",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_subnets",
                                        "var.enable_public_redshift",
                                        "local.len_redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.redshift_public",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "redshift_public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.redshift",
                                            "aws_route_table.public",
                                            "var.single_nat_gateway",
                                            "var.create_redshift_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.redshift",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_subnets",
                                        "var.enable_public_redshift",
                                        "local.len_redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.database",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.database_subnet_ipv6_native",
                                            "var.database_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.database_subnet_ipv6_native",
                                            "var.database_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "enable_dns64": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.database_subnet_enable_dns64"
                                        ]
                                    },
                                    "enable_resource_name_dns_a_record_on_launch": {
                                        "references": [
                                            "var.database_subnet_ipv6_native",
                                            "var.database_subnet_enable_resource_name_dns_a_record_on_launch"
                                        ]
                                    },
                                    "enable_resource_name_dns_aaaa_record_on_launch": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.database_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.database_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_native": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.database_subnet_ipv6_native"
                                        ]
                                    },
                                    "private_dns_hostname_type_on_launch": {
                                        "references": [
                                            "var.database_subnet_private_dns_hostname_type_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.database_subnet_names",
                                            "count.index",
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.database_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_database_subnets",
                                        "local.len_database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.elasticache",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.elasticache_subnet_ipv6_native",
                                            "var.elasticache_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_subnet_ipv6_native",
                                            "var.elasticache_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "enable_dns64": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.elasticache_subnet_enable_dns64"
                                        ]
                                    },
                                    "enable_resource_name_dns_a_record_on_launch": {
                                        "references": [
                                            "var.elasticache_subnet_ipv6_native",
                                            "var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch"
                                        ]
                                    },
                                    "enable_resource_name_dns_aaaa_record_on_launch": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.elasticache_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.elasticache_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_native": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.elasticache_subnet_ipv6_native"
                                        ]
                                    },
                                    "private_dns_hostname_type_on_launch": {
                                        "references": [
                                            "var.elasticache_subnet_private_dns_hostname_type_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.elasticache_subnet_names",
                                            "count.index",
                                            "var.name",
                                            "var.elasticache_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.elasticache_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_elasticache_subnets",
                                        "local.len_elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.intra",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.intra_subnet_ipv6_native",
                                            "var.intra_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_subnet_ipv6_native",
                                            "var.intra_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "enable_dns64": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.intra_subnet_enable_dns64"
                                        ]
                                    },
                                    "enable_resource_name_dns_a_record_on_launch": {
                                        "references": [
                                            "var.intra_subnet_ipv6_native",
                                            "var.intra_subnet_enable_resource_name_dns_a_record_on_launch"
                                        ]
                                    },
                                    "enable_resource_name_dns_aaaa_record_on_launch": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.intra_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.intra_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_native": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.intra_subnet_ipv6_native"
                                        ]
                                    },
                                    "private_dns_hostname_type_on_launch": {
                                        "references": [
                                            "var.intra_subnet_private_dns_hostname_type_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.intra_subnet_names",
                                            "count.index",
                                            "var.name",
                                            "var.intra_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.intra_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_intra_subnets",
                                        "local.len_intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.outpost",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.outpost_subnet_ipv6_native",
                                            "var.outpost_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.outpost_az"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_subnet_ipv6_native",
                                            "var.outpost_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "customer_owned_ipv4_pool": {
                                        "references": [
                                            "var.customer_owned_ipv4_pool"
                                        ]
                                    },
                                    "enable_dns64": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.outpost_subnet_enable_dns64"
                                        ]
                                    },
                                    "enable_resource_name_dns_a_record_on_launch": {
                                        "references": [
                                            "var.outpost_subnet_ipv6_native",
                                            "var.outpost_subnet_enable_resource_name_dns_a_record_on_launch"
                                        ]
                                    },
                                    "enable_resource_name_dns_aaaa_record_on_launch": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.outpost_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.outpost_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_native": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.outpost_subnet_ipv6_native"
                                        ]
                                    },
                                    "map_customer_owned_ip_on_launch": {
                                        "references": [
                                            "var.map_customer_owned_ip_on_launch"
                                        ]
                                    },
                                    "outpost_arn": {
                                        "references": [
                                            "var.outpost_arn"
                                        ]
                                    },
                                    "private_dns_hostname_type_on_launch": {
                                        "references": [
                                            "var.outpost_subnet_private_dns_hostname_type_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.outpost_subnet_names",
                                            "count.index",
                                            "var.name",
                                            "var.outpost_subnet_suffix",
                                            "var.outpost_az",
                                            "var.tags",
                                            "var.outpost_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_outpost_subnets",
                                        "local.len_outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.private",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.private_subnet_ipv6_native",
                                            "var.private_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.private_subnet_ipv6_native",
                                            "var.private_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "enable_dns64": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.private_subnet_enable_dns64"
                                        ]
                                    },
                                    "enable_resource_name_dns_a_record_on_launch": {
                                        "references": [
                                            "var.private_subnet_ipv6_native",
                                            "var.private_subnet_enable_resource_name_dns_a_record_on_launch"
                                        ]
                                    },
                                    "enable_resource_name_dns_aaaa_record_on_launch": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.private_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.private_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_native": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.private_subnet_ipv6_native"
                                        ]
                                    },
                                    "private_dns_hostname_type_on_launch": {
                                        "references": [
                                            "var.private_subnet_private_dns_hostname_type_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.private_subnet_names",
                                            "count.index",
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.private_subnet_tags",
                                            "var.private_subnet_tags_per_az",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_private_subnets",
                                        "local.len_private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.public",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.public_subnet_ipv6_native",
                                            "var.public_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.public_subnet_ipv6_native",
                                            "var.public_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "enable_dns64": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.public_subnet_enable_dns64"
                                        ]
                                    },
                                    "enable_resource_name_dns_a_record_on_launch": {
                                        "references": [
                                            "var.public_subnet_ipv6_native",
                                            "var.public_subnet_enable_resource_name_dns_a_record_on_launch"
                                        ]
                                    },
                                    "enable_resource_name_dns_aaaa_record_on_launch": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.public_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.public_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_native": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.public_subnet_ipv6_native"
                                        ]
                                    },
                                    "map_public_ip_on_launch": {
                                        "references": [
                                            "var.map_public_ip_on_launch"
                                        ]
                                    },
                                    "private_dns_hostname_type_on_launch": {
                                        "references": [
                                            "var.public_subnet_private_dns_hostname_type_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.public_subnet_names",
                                            "count.index",
                                            "var.name",
                                            "var.public_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.public_subnet_tags",
                                            "var.public_subnet_tags_per_az",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_public_subnets",
                                        "var.one_nat_gateway_per_az",
                                        "local.len_public_subnets",
                                        "var.azs",
                                        "local.len_public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.redshift",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.redshift_subnet_ipv6_native",
                                            "var.redshift_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_subnet_ipv6_native",
                                            "var.redshift_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "enable_dns64": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.redshift_subnet_enable_dns64"
                                        ]
                                    },
                                    "enable_resource_name_dns_a_record_on_launch": {
                                        "references": [
                                            "var.redshift_subnet_ipv6_native",
                                            "var.redshift_subnet_enable_resource_name_dns_a_record_on_launch"
                                        ]
                                    },
                                    "enable_resource_name_dns_aaaa_record_on_launch": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.redshift_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.redshift_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_native": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.redshift_subnet_ipv6_native"
                                        ]
                                    },
                                    "private_dns_hostname_type_on_launch": {
                                        "references": [
                                            "var.redshift_subnet_private_dns_hostname_type_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.redshift_subnet_names",
                                            "count.index",
                                            "var.name",
                                            "var.redshift_subnet_suffix",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.redshift_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_redshift_subnets",
                                        "local.len_redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc.this",
                                "mode": "managed",
                                "type": "aws_vpc",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_generated_ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.use_ipam_pool"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.use_ipam_pool",
                                            "var.cidr"
                                        ]
                                    },
                                    "enable_dns_hostnames": {
                                        "references": [
                                            "var.enable_dns_hostnames"
                                        ]
                                    },
                                    "enable_dns_support": {
                                        "references": [
                                            "var.enable_dns_support"
                                        ]
                                    },
                                    "enable_network_address_usage_metrics": {
                                        "references": [
                                            "var.enable_network_address_usage_metrics"
                                        ]
                                    },
                                    "instance_tenancy": {
                                        "references": [
                                            "var.instance_tenancy"
                                        ]
                                    },
                                    "ipv4_ipam_pool_id": {
                                        "references": [
                                            "var.ipv4_ipam_pool_id"
                                        ]
                                    },
                                    "ipv4_netmask_length": {
                                        "references": [
                                            "var.ipv4_netmask_length"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.ipv6_cidr"
                                        ]
                                    },
                                    "ipv6_cidr_block_network_border_group": {
                                        "references": [
                                            "var.ipv6_cidr_block_network_border_group"
                                        ]
                                    },
                                    "ipv6_ipam_pool_id": {
                                        "references": [
                                            "var.ipv6_ipam_pool_id"
                                        ]
                                    },
                                    "ipv6_netmask_length": {
                                        "references": [
                                            "var.ipv6_netmask_length"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.vpc_tags"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_dhcp_options.this",
                                "mode": "managed",
                                "type": "aws_vpc_dhcp_options",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "domain_name": {
                                        "references": [
                                            "var.dhcp_options_domain_name"
                                        ]
                                    },
                                    "domain_name_servers": {
                                        "references": [
                                            "var.dhcp_options_domain_name_servers"
                                        ]
                                    },
                                    "netbios_name_servers": {
                                        "references": [
                                            "var.dhcp_options_netbios_name_servers"
                                        ]
                                    },
                                    "netbios_node_type": {
                                        "references": [
                                            "var.dhcp_options_netbios_node_type"
                                        ]
                                    },
                                    "ntp_servers": {
                                        "references": [
                                            "var.dhcp_options_ntp_servers"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.dhcp_options_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_dhcp_options"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_dhcp_options_association.this",
                                "mode": "managed",
                                "type": "aws_vpc_dhcp_options_association",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "dhcp_options_id": {
                                        "references": [
                                            "aws_vpc_dhcp_options.this[0].id",
                                            "aws_vpc_dhcp_options.this[0]",
                                            "aws_vpc_dhcp_options.this"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_dhcp_options"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_ipv4_cidr_block_association.this",
                                "mode": "managed",
                                "type": "aws_vpc_ipv4_cidr_block_association",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.secondary_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this[0].id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.secondary_cidr_blocks",
                                        "var.secondary_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway.this",
                                "mode": "managed",
                                "type": "aws_vpn_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "amazon_side_asn": {
                                        "references": [
                                            "var.amazon_side_asn"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.vpn_gateway_az"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.vpn_gateway_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.enable_vpn_gateway"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_attachment.this",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_attachment",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "var.vpn_gateway_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.vpn_gateway_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.intra",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.propagate_intra_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id",
                                        "local.len_intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.private",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.propagate_private_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id",
                                        "local.len_private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.public",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_vpc",
                                        "var.propagate_public_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "flow_log_cloudwatch_assume_role",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRole"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "vpc-flow-logs.amazonaws.com"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ],
                                            "sid": {
                                                "constant_value": "AWSVPCFlowLogsAssumeRole"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "logs:CreateLogStream",
                                                    "logs:PutLogEvents",
                                                    "logs:DescribeLogGroups",
                                                    "logs:DescribeLogStreams"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "amazon_side_asn": {
                                "default": "64512",
                                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN"
                            },
                            "azs": {
                                "default": [],
                                "description": "A list of availability zones names or ids in the region"
                            },
                            "cidr": {
                                "default": "10.0.0.0/16",
                                "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` \u0026 `ipv4_ipam_pool_id`"
                            },
                            "create_database_internet_gateway_route": {
                                "default": false,
                                "description": "Controls if an internet gateway route for public database access should be created"
                            },
                            "create_database_nat_gateway_route": {
                                "default": false,
                                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
                            },
                            "create_database_subnet_group": {
                                "default": true,
                                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
                            },
                            "create_database_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for database should be created"
                            },
                            "create_egress_only_igw": {
                                "default": true,
                                "description": "Controls if an Egress Only Internet Gateway is created and its related routes"
                            },
                            "create_elasticache_subnet_group": {
                                "default": true,
                                "description": "Controls if elasticache subnet group should be created"
                            },
                            "create_elasticache_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for elasticache should be created"
                            },
                            "create_flow_log_cloudwatch_iam_role": {
                                "default": false,
                                "description": "Whether to create IAM role for VPC Flow Logs"
                            },
                            "create_flow_log_cloudwatch_log_group": {
                                "default": false,
                                "description": "Whether to create CloudWatch log group for VPC Flow Logs"
                            },
                            "create_igw": {
                                "default": true,
                                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them"
                            },
                            "create_redshift_subnet_group": {
                                "default": true,
                                "description": "Controls if redshift subnet group should be created"
                            },
                            "create_redshift_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for redshift should be created"
                            },
                            "create_vpc": {
                                "default": true,
                                "description": "Controls if VPC should be created (it affects almost all resources)"
                            },
                            "customer_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the Customer Gateway"
                            },
                            "customer_gateways": {
                                "default": {},
                                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
                            },
                            "customer_owned_ipv4_pool": {
                                "default": null,
                                "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured"
                            },
                            "database_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnets network ACL"
                            },
                            "database_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
                            },
                            "database_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Database subnets inbound network ACL rules"
                            },
                            "database_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Database subnets outbound network ACL rules"
                            },
                            "database_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the database route tables"
                            },
                            "database_subnet_assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                            },
                            "database_subnet_enable_dns64": {
                                "default": true,
                                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                            },
                            "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                                "default": false,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                            },
                            "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                "default": true,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                            },
                            "database_subnet_group_name": {
                                "default": null,
                                "description": "Name of database subnet group"
                            },
                            "database_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnet group"
                            },
                            "database_subnet_ipv6_native": {
                                "default": false,
                                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                            },
                            "database_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "database_subnet_names": {
                                "default": [],
                                "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated"
                            },
                            "database_subnet_private_dns_hostname_type_on_launch": {
                                "default": null,
                                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                            },
                            "database_subnet_suffix": {
                                "default": "db",
                                "description": "Suffix to append to database subnets name"
                            },
                            "database_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnets"
                            },
                            "database_subnets": {
                                "default": [],
                                "description": "A list of database subnets inside the VPC"
                            },
                            "default_network_acl_egress": {
                                "default": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_no": "100",
                                        "to_port": "0"
                                    },
                                    {
                                        "action": "allow",
                                        "from_port": "0",
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": "101",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "List of maps of egress rules to set on the Default Network ACL"
                            },
                            "default_network_acl_ingress": {
                                "default": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_no": "100",
                                        "to_port": "0"
                                    },
                                    {
                                        "action": "allow",
                                        "from_port": "0",
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": "101",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "List of maps of ingress rules to set on the Default Network ACL"
                            },
                            "default_network_acl_name": {
                                "default": null,
                                "description": "Name to be used on the Default Network ACL"
                            },
                            "default_network_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the Default Network ACL"
                            },
                            "default_route_table_name": {
                                "default": null,
                                "description": "Name to be used on the default route table"
                            },
                            "default_route_table_propagating_vgws": {
                                "default": [],
                                "description": "List of virtual gateways for propagation"
                            },
                            "default_route_table_routes": {
                                "default": [],
                                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
                            },
                            "default_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the default route table"
                            },
                            "default_security_group_egress": {
                                "default": [],
                                "description": "List of maps of egress rules to set on the default security group"
                            },
                            "default_security_group_ingress": {
                                "default": [],
                                "description": "List of maps of ingress rules to set on the default security group"
                            },
                            "default_security_group_name": {
                                "default": null,
                                "description": "Name to be used on the default security group"
                            },
                            "default_security_group_tags": {
                                "default": {},
                                "description": "Additional tags for the default security group"
                            },
                            "default_vpc_enable_dns_hostnames": {
                                "default": true,
                                "description": "Should be true to enable DNS hostnames in the Default VPC"
                            },
                            "default_vpc_enable_dns_support": {
                                "default": true,
                                "description": "Should be true to enable DNS support in the Default VPC"
                            },
                            "default_vpc_name": {
                                "default": null,
                                "description": "Name to be used on the Default VPC"
                            },
                            "default_vpc_tags": {
                                "default": {},
                                "description": "Additional tags for the Default VPC"
                            },
                            "dhcp_options_domain_name": {
                                "default": "",
                                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_domain_name_servers": {
                                "default": [
                                    "AmazonProvidedDNS"
                                ],
                                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_netbios_name_servers": {
                                "default": [],
                                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_netbios_node_type": {
                                "default": "",
                                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_ntp_servers": {
                                "default": [],
                                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_tags": {
                                "default": {},
                                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
                            },
                            "elasticache_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnets network ACL"
                            },
                            "elasticache_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
                            },
                            "elasticache_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Elasticache subnets inbound network ACL rules"
                            },
                            "elasticache_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Elasticache subnets outbound network ACL rules"
                            },
                            "elasticache_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache route tables"
                            },
                            "elasticache_subnet_assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                            },
                            "elasticache_subnet_enable_dns64": {
                                "default": true,
                                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                            },
                            "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                                "default": false,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                            },
                            "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                "default": true,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                            },
                            "elasticache_subnet_group_name": {
                                "default": null,
                                "description": "Name of elasticache subnet group"
                            },
                            "elasticache_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnet group"
                            },
                            "elasticache_subnet_ipv6_native": {
                                "default": false,
                                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                            },
                            "elasticache_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "elasticache_subnet_names": {
                                "default": [],
                                "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated"
                            },
                            "elasticache_subnet_private_dns_hostname_type_on_launch": {
                                "default": null,
                                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                            },
                            "elasticache_subnet_suffix": {
                                "default": "elasticache",
                                "description": "Suffix to append to elasticache subnets name"
                            },
                            "elasticache_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnets"
                            },
                            "elasticache_subnets": {
                                "default": [],
                                "description": "A list of elasticache subnets inside the VPC"
                            },
                            "enable_dhcp_options": {
                                "default": false,
                                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
                            },
                            "enable_dns_hostnames": {
                                "default": true,
                                "description": "Should be true to enable DNS hostnames in the VPC"
                            },
                            "enable_dns_support": {
                                "default": true,
                                "description": "Should be true to enable DNS support in the VPC"
                            },
                            "enable_flow_log": {
                                "default": false,
                                "description": "Whether or not to enable VPC Flow Logs"
                            },
                            "enable_ipv6": {
                                "default": false,
                                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block"
                            },
                            "enable_nat_gateway": {
                                "default": false,
                                "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
                            },
                            "enable_network_address_usage_metrics": {
                                "default": null,
                                "description": "Determines whether network address usage metrics are enabled for the VPC"
                            },
                            "enable_public_redshift": {
                                "default": false,
                                "description": "Controls if redshift should have public routing table"
                            },
                            "enable_vpn_gateway": {
                                "default": false,
                                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
                            },
                            "external_nat_ip_ids": {
                                "default": [],
                                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
                            },
                            "external_nat_ips": {
                                "default": [],
                                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
                            },
                            "flow_log_cloudwatch_iam_role_arn": {
                                "default": "",
                                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided"
                            },
                            "flow_log_cloudwatch_log_group_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs"
                            },
                            "flow_log_cloudwatch_log_group_name_prefix": {
                                "default": "/aws/vpc-flow-log/",
                                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs"
                            },
                            "flow_log_cloudwatch_log_group_name_suffix": {
                                "default": "",
                                "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs"
                            },
                            "flow_log_cloudwatch_log_group_retention_in_days": {
                                "default": null,
                                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs"
                            },
                            "flow_log_cloudwatch_log_group_skip_destroy": {
                                "default": false,
                                "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state"
                            },
                            "flow_log_deliver_cross_account_role": {
                                "default": null,
                                "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
                            },
                            "flow_log_destination_arn": {
                                "default": "",
                                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided"
                            },
                            "flow_log_destination_type": {
                                "default": "cloud-watch-logs",
                                "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs"
                            },
                            "flow_log_file_format": {
                                "default": null,
                                "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`"
                            },
                            "flow_log_hive_compatible_partitions": {
                                "default": false,
                                "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3"
                            },
                            "flow_log_log_format": {
                                "default": null,
                                "description": "The fields to include in the flow log record, in the order in which they should appear"
                            },
                            "flow_log_max_aggregation_interval": {
                                "default": 600,
                                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds"
                            },
                            "flow_log_per_hour_partition": {
                                "default": false,
                                "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries"
                            },
                            "flow_log_traffic_type": {
                                "default": "ALL",
                                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL"
                            },
                            "igw_tags": {
                                "default": {},
                                "description": "Additional tags for the internet gateway"
                            },
                            "instance_tenancy": {
                                "default": "default",
                                "description": "A tenancy option for instances launched into the VPC"
                            },
                            "intra_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the intra subnets network ACL"
                            },
                            "intra_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
                            },
                            "intra_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Intra subnets inbound network ACLs"
                            },
                            "intra_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Intra subnets outbound network ACLs"
                            },
                            "intra_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the intra route tables"
                            },
                            "intra_subnet_assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                            },
                            "intra_subnet_enable_dns64": {
                                "default": true,
                                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                            },
                            "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                                "default": false,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                            },
                            "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                "default": true,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                            },
                            "intra_subnet_ipv6_native": {
                                "default": false,
                                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                            },
                            "intra_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "intra_subnet_names": {
                                "default": [],
                                "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated"
                            },
                            "intra_subnet_private_dns_hostname_type_on_launch": {
                                "default": null,
                                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                            },
                            "intra_subnet_suffix": {
                                "default": "intra",
                                "description": "Suffix to append to intra subnets name"
                            },
                            "intra_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the intra subnets"
                            },
                            "intra_subnets": {
                                "default": [],
                                "description": "A list of intra subnets inside the VPC"
                            },
                            "ipv4_ipam_pool_id": {
                                "default": null,
                                "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR"
                            },
                            "ipv4_netmask_length": {
                                "default": null,
                                "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id"
                            },
                            "ipv6_cidr": {
                                "default": null,
                                "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`"
                            },
                            "ipv6_cidr_block_network_border_group": {
                                "default": null,
                                "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones"
                            },
                            "ipv6_ipam_pool_id": {
                                "default": null,
                                "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`"
                            },
                            "ipv6_netmask_length": {
                                "default": null,
                                "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`"
                            },
                            "manage_default_network_acl": {
                                "default": true,
                                "description": "Should be true to adopt and manage Default Network ACL"
                            },
                            "manage_default_route_table": {
                                "default": true,
                                "description": "Should be true to manage default route table"
                            },
                            "manage_default_security_group": {
                                "default": true,
                                "description": "Should be true to adopt and manage default security group"
                            },
                            "manage_default_vpc": {
                                "default": false,
                                "description": "Should be true to adopt and manage Default VPC"
                            },
                            "map_customer_owned_ip_on_launch": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`"
                            },
                            "map_public_ip_on_launch": {
                                "default": false,
                                "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`"
                            },
                            "name": {
                                "default": "",
                                "description": "Name to be used on all the resources as identifier"
                            },
                            "nat_eip_tags": {
                                "default": {},
                                "description": "Additional tags for the NAT EIP"
                            },
                            "nat_gateway_destination_cidr_block": {
                                "default": "0.0.0.0/0",
                                "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route"
                            },
                            "nat_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the NAT gateways"
                            },
                            "one_nat_gateway_per_az": {
                                "default": false,
                                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`"
                            },
                            "outpost_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the outpost subnets network ACL"
                            },
                            "outpost_arn": {
                                "default": null,
                                "description": "ARN of Outpost you want to create a subnet in"
                            },
                            "outpost_az": {
                                "default": null,
                                "description": "AZ where Outpost is anchored"
                            },
                            "outpost_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
                            },
                            "outpost_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Outpost subnets inbound network ACLs"
                            },
                            "outpost_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Outpost subnets outbound network ACLs"
                            },
                            "outpost_subnet_assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                            },
                            "outpost_subnet_enable_dns64": {
                                "default": true,
                                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                            },
                            "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                                "default": false,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                            },
                            "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                "default": true,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                            },
                            "outpost_subnet_ipv6_native": {
                                "default": false,
                                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                            },
                            "outpost_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "outpost_subnet_names": {
                                "default": [],
                                "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated"
                            },
                            "outpost_subnet_private_dns_hostname_type_on_launch": {
                                "default": null,
                                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                            },
                            "outpost_subnet_suffix": {
                                "default": "outpost",
                                "description": "Suffix to append to outpost subnets name"
                            },
                            "outpost_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the outpost subnets"
                            },
                            "outpost_subnets": {
                                "default": [],
                                "description": "A list of outpost subnets inside the VPC"
                            },
                            "private_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the private subnets network ACL"
                            },
                            "private_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
                            },
                            "private_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Private subnets inbound network ACLs"
                            },
                            "private_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Private subnets outbound network ACLs"
                            },
                            "private_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the private route tables"
                            },
                            "private_subnet_assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                            },
                            "private_subnet_enable_dns64": {
                                "default": true,
                                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                            },
                            "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                                "default": false,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                            },
                            "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                "default": true,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                            },
                            "private_subnet_ipv6_native": {
                                "default": false,
                                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                            },
                            "private_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "private_subnet_names": {
                                "default": [],
                                "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated"
                            },
                            "private_subnet_private_dns_hostname_type_on_launch": {
                                "default": null,
                                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                            },
                            "private_subnet_suffix": {
                                "default": "private",
                                "description": "Suffix to append to private subnets name"
                            },
                            "private_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the private subnets"
                            },
                            "private_subnet_tags_per_az": {
                                "default": {},
                                "description": "Additional tags for the private subnets where the primary key is the AZ"
                            },
                            "private_subnets": {
                                "default": [],
                                "description": "A list of private subnets inside the VPC"
                            },
                            "propagate_intra_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "propagate_private_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "propagate_public_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "public_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the public subnets network ACL"
                            },
                            "public_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
                            },
                            "public_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Public subnets inbound network ACLs"
                            },
                            "public_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Public subnets outbound network ACLs"
                            },
                            "public_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the public route tables"
                            },
                            "public_subnet_assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                            },
                            "public_subnet_enable_dns64": {
                                "default": true,
                                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                            },
                            "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                                "default": false,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                            },
                            "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                "default": true,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                            },
                            "public_subnet_ipv6_native": {
                                "default": false,
                                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                            },
                            "public_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "public_subnet_names": {
                                "default": [],
                                "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated"
                            },
                            "public_subnet_private_dns_hostname_type_on_launch": {
                                "default": null,
                                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                            },
                            "public_subnet_suffix": {
                                "default": "public",
                                "description": "Suffix to append to public subnets name"
                            },
                            "public_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the public subnets"
                            },
                            "public_subnet_tags_per_az": {
                                "default": {},
                                "description": "Additional tags for the public subnets where the primary key is the AZ"
                            },
                            "public_subnets": {
                                "default": [],
                                "description": "A list of public subnets inside the VPC"
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "redshift_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnets network ACL"
                            },
                            "redshift_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
                            },
                            "redshift_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Redshift subnets inbound network ACL rules"
                            },
                            "redshift_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Redshift subnets outbound network ACL rules"
                            },
                            "redshift_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift route tables"
                            },
                            "redshift_subnet_assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                            },
                            "redshift_subnet_enable_dns64": {
                                "default": true,
                                "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                            },
                            "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                                "default": false,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                            },
                            "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                "default": true,
                                "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                            },
                            "redshift_subnet_group_name": {
                                "default": null,
                                "description": "Name of redshift subnet group"
                            },
                            "redshift_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnet group"
                            },
                            "redshift_subnet_ipv6_native": {
                                "default": false,
                                "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                            },
                            "redshift_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "redshift_subnet_names": {
                                "default": [],
                                "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated"
                            },
                            "redshift_subnet_private_dns_hostname_type_on_launch": {
                                "default": null,
                                "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                            },
                            "redshift_subnet_suffix": {
                                "default": "redshift",
                                "description": "Suffix to append to redshift subnets name"
                            },
                            "redshift_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnets"
                            },
                            "redshift_subnets": {
                                "default": [],
                                "description": "A list of redshift subnets inside the VPC"
                            },
                            "reuse_nat_ips": {
                                "default": false,
                                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
                            },
                            "secondary_cidr_blocks": {
                                "default": [],
                                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
                            },
                            "single_nat_gateway": {
                                "default": false,
                                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources"
                            },
                            "use_ipam_pool": {
                                "default": false,
                                "description": "Determines whether IPAM pool is used for CIDR allocation"
                            },
                            "vpc_flow_log_permissions_boundary": {
                                "default": null,
                                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
                            },
                            "vpc_flow_log_tags": {
                                "default": {},
                                "description": "Additional tags for the VPC Flow Logs"
                            },
                            "vpc_tags": {
                                "default": {},
                                "description": "Additional tags for the VPC"
                            },
                            "vpn_gateway_az": {
                                "default": null,
                                "description": "The Availability Zone for the VPN Gateway"
                            },
                            "vpn_gateway_id": {
                                "default": "",
                                "description": "ID of VPN Gateway to attach to the VPC"
                            },
                            "vpn_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the VPN gateway"
                            }
                        }
                    },
                    "version_constraint": "~\u003e 5.0"
                }
            }
        }
    },
    "relevant_attributes": [
        {
            "resource": "module.vpc.aws_subnet.database",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "min_size"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "health_check_grace_period"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_internet_gateway.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.ecs_cluster.aws_cloudwatch_log_group.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this_name_prefix",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route.database_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "availability_zones"
            ]
        },
        {
            "resource": "module.autoscaling.aws_iam_instance_profile.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.ecs_cluster.aws_cloudwatch_log_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "availability_zones"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_network_acl_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route.public_internet_gateway[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.public",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.private",
            "attribute": []
        },
        {
            "resource": "module.ecs_cluster.aws_ecs_cluster.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "max_size"
            ]
        },
        {
            "resource": "module.autoscaling.aws_launch_template.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "health_check_type"
            ]
        },
        {
            "resource": "module.vpc.aws_eip.nat",
            "attribute": []
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_internet_gateway.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.private",
            "attribute": []
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "owner_id"
            ]
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "max_size"
            ]
        },
        {
            "resource": "module.autoscaling.aws_launch_template.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "desired_capacity"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "min_size"
            ]
        },
        {
            "resource": "module.autoscaling.aws_launch_template.this[0]",
            "attribute": [
                "latest_version"
            ]
        },
        {
            "resource": "module.vpc.aws_route.private_ipv6_egress",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table.elasticache",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table.database",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "health_check_type"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "health_check_grace_period"
            ]
        },
        {
            "resource": "data.aws_ssm_parameter.ecs_optimized_ami",
            "attribute": [
                "value"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "owner_id"
            ]
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "target_group_arns"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "vpc_zone_identifier"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "load_balancers"
            ]
        },
        {
            "resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.private",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_launch_template.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "vpc_zone_identifier"
            ]
        },
        {
            "resource": "module.vpc.aws_customer_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "cidr_block"
            ]
        },
        {
            "resource": "module.autoscaling.aws_iam_role.this[0]",
            "attribute": [
                "unique_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.redshift",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "ipv6_cidr_block"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "default_cooldown"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_nat_gateway.this",
            "attribute": []
        },
        {
            "resource": "aws_service_discovery_private_dns_namespace.this",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_iam_instance_profile.this[0]",
            "attribute": [
                "unique_id"
            ]
        },
        {
            "resource": "module.autoscaling.aws_iam_role.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "description"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "main_route_table_id"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_policy.this",
            "attribute": []
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this[0]",
            "attribute": [
                "owner_id"
            ]
        },
        {
            "resource": "module.vpc.aws_egress_only_internet_gateway.this",
            "attribute": []
        },
        {
            "resource": "aws_service_discovery_private_dns_namespace.this",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "ipv6_association_id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table_association.redshift_public",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_schedule.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "instance_tenancy"
            ]
        },
        {
            "resource": "module.ecs_cluster.aws_ecs_cluster.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "enable_dns_hostnames"
            ]
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this[0]",
            "attribute": [
                "vpc_id"
            ]
        },
        {
            "resource": "module.autoscaling.data.aws_iam_policy_document.assume_role_policy[0]",
            "attribute": [
                "json"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.intra",
            "attribute": []
        },
        {
            "resource": "data.aws_availability_zones.available",
            "attribute": [
                "names"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.elasticache",
            "attribute": []
        },
        {
            "resource": "module.ecs_cluster.aws_ecs_cluster_capacity_providers.this",
            "attribute": []
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this",
            "attribute": []
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this_name_prefix[0]",
            "attribute": [
                "vpc_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.database",
            "attribute": []
        },
        {
            "resource": "module.ecs_cluster.aws_ecs_cluster.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.autoscaling.aws_launch_template.this[0]",
            "attribute": [
                "default_version"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.intra",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "desired_capacity"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
            "attribute": [
                "vpc_id"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.outpost",
            "attribute": []
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this[0]",
            "attribute": [
                "description"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.public[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "enable_dns_support"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "target_group_arns"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.public",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.public",
            "attribute": []
        },
        {
            "resource": "module.autoscaling_sg.aws_security_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_route.private_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_route_table_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.elasticache",
            "attribute": []
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.idc[0]",
            "attribute": [
                "load_balancers"
            ]
        },
        {
            "resource": "module.autoscaling.aws_autoscaling_group.this[0]",
            "attribute": [
                "default_cooldown"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.autoscaling.aws_iam_role.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.autoscaling.aws_iam_instance_profile.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.redshift",
            "attribute": []
        },
        {
            "resource": "module.ecs_cluster.aws_ecs_capacity_provider.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_security_group_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.intra",
            "attribute": []
        }
    ],
    "timestamp": "2024-05-07T22:56:08Z",
    "errored": false
}